{
  "and": "şi",
  "animationMode": "Animation",
  "backToPreviousLevel": "Înapoi la nivelul anterior",
  "blocklyMessage": "Blockly",
  "blocks": "blocuri",
  "booleanFalse": "fals",
  "booleanTrue": "adevărat",
  "catActions": "Actions",
  "catColour": "Culoare",
  "catLists": "Liste",
  "catLogic": "Logic",
  "catLoops": "Bucle",
  "catMath": "Math",
  "catProcedures": "Functions",
  "catText": "Text",
  "catVariables": "Variables",
  "choosePrefix": "Alegeţi...",
  "clearPuzzle": "Reîncepe",
  "clearPuzzleConfirm": "Acest lucru va reseta puzzle-ul la starea sa inițială şi va şterge toate blocurile pe care le-ai adăugat sau modificat.",
  "clearPuzzleConfirmHeader": "Ești sigur că dorești să reîncepi?",
  "codeMode": "Cod",
  "codeTooltip": "Vezi codul JavaScript generat.",
  "completedWithoutRecommendedBlock": "Felicitări! Ai terminat Puzzle-ul {puzzleNumber}. (Dar ai putea folosi un bloc diferit pentru un cod mai puternic.)",
  "continue": "Continuă",
  "copy": "Copiază",
  "debugConsoleHeader": "Debug Console",
  "debugCommandsHeaderWhenOpen": "Debug Commands",
  "debugCommandsHeaderWhenClosed": "Show Debug Commands",
  "debugWatchHeader": "Watch",
  "debugWatchNotAvailable": "<not available>",
  "defaultTwitterText": "Uite ce am creat",
  "designMode": "Design",
  "dialogCancel": "Anulează",
  "dialogOK": "OK",
  "directionEastLetter": "E",
  "directionNorthLetter": "N",
  "directionSouthLetter": "S",
  "directionWestLetter": "V",
  "dropletBlock_addOperator_description": "Adaugă două numere",
  "dropletBlock_addOperator_signatureOverride": "Adaugă operatorul",
  "dropletBlock_andOperator_description": "Returnează ADEVĂRAT numai atunci când ambele expresii sunt adevărate și FALS în caz contrar",
  "dropletBlock_andOperator_signatureOverride": "ŞI operator boolean",
  "dropletBlock_assign_x_description": "Atribuie o valoare unei variabile existente. De exemplu, x = 0;",
  "dropletBlock_assign_x_signatureOverride": "Atribuie o variabilă",
  "dropletBlock_callMyFunction_description": "Apelează o anumită funcție care nu are parametri",
  "dropletBlock_callMyFunction_n_description": "Apelează o anumită funcție care are unul sau mai mulți parametri",
  "dropletBlock_callMyFunction_n_signatureOverride": "Apelează o funcție cu parametri",
  "dropletBlock_callMyFunction_signatureOverride": "Apelează o funcție",
  "dropletBlock_comment_description": "Scrie o descriere a unui cod",
  "dropletBlock_comment_signatureOverride": "comentariu",
  "dropletBlock_declareAssign_x_array_1_4_description": "Declară o variabilă şi o atribuie unei secvențe cu valori iniţiale date",
  "dropletBlock_declareAssign_x_array_1_4_signatureOverride": "Declară o variabilă atribuită unei secvențe",
  "dropletBlock_declareAssign_x_description": "Declară o variabilă cu numele dat după \"var\", şi îi atribuie valoarea din partea dreapta a expresiei",
  "dropletBlock_declareAssign_x_signatureOverride": "Declară o variabilă",
  "dropletBlock_declareAssign_x_prompt_description": "Declară că secvența de cod folosește acum o variabilă şi îi atribuie o valoare iniţială furnizată de utilizator",
  "dropletBlock_declareAssign_x_prompt_signatureOverride": "Solicită utilizatorului o valoare şi stocheaz-o",
  "dropletBlock_declareAssign_x_promptNum_description": "Declares that the code will now use a variable and assign it an initial numerical value provided by the user",
  "dropletBlock_declareAssign_x_promptNum_signatureOverride": "Prompt the user for a numerical value and store it",
  "dropletBlock_declareNoAssign_x_description": "Declares a variable with the given name after 'var'",
  "dropletBlock_declareNoAssign_x_signatureOverride": "Declară o variabilă",
  "dropletBlock_divideOperator_description": "Împarte două numere",
  "dropletBlock_divideOperator_signatureOverride": "Operatorul de împărțire",
  "dropletBlock_equalityOperator_description": "Testează dacă două valori sunt egale. Returnează adevărat dacă valoarea din partea stângă a expresiei este egală cu valoarea din partea dreaptă a acesteia, iar în caz contrar fals",
  "dropletBlock_equalityOperator_signatureOverride": "Operatorul de egalitate",
  "dropletBlock_forLoop_i_0_4_description": "Crează o buclă constând dintr-o expresie de iniţializare, o expresie condiţională, o expresie de incrementare şi un bloc de declaraţii executate pentru fiecare repetare a buclei",
  "dropletBlock_forLoop_i_0_4_signatureOverride": "pentru buclă",
  "dropletBlock_functionParams_n_description": "Un set de afirmații care ia unul sau mai mulți parametri şi efectuează o sarcină sau calculează o valoare atunci când funcţia este apelată",
  "dropletBlock_functionParams_n_signatureOverride": "Definește o funcţie cu parametri",
  "dropletBlock_functionParams_none_description": "Un set de afirmații care execută o sarcină sau calculează o valoare atunci când funcţia este apelată",
  "dropletBlock_functionParams_none_signatureOverride": "Definește o funcţie",
  "dropletBlock_getTime_description": "Obține ora curentă în milisecunde",
  "dropletBlock_greaterThanOperator_description": "Testează dacă un număr este mai mare decât un alt număr. Returnează true (adevărat) dacă valoarea de pe partea stângă a expresiei este strict mai mare decât valoarea de pe partea dreaptă a expresiei",
  "dropletBlock_greaterThanOperator_signatureOverride": "Mai mare decât operatorul",
  "dropletBlock_greaterThanOrEqualOperator_description": "Tests whether a value is greater than or equal to another value. Returns true if the value on the left-hand side of the expression is greater than or equal to the value on the right-hand side of the expression.",
  "dropletBlock_greaterThanOrEqualOperator_signatureOverride": "Greater than or equal operator",
  "dropletBlock_ifBlock_description": "Do something only if a condition is true",
  "dropletBlock_ifBlock_signatureOverride": "if statement",
  "dropletBlock_ifElseBlock_description": "Do something if a condition is true, otherwise do something else",
  "dropletBlock_ifElseBlock_signatureOverride": "if/else statement",
  "dropletBlock_inequalityOperator_description": "Test for inequality",
  "dropletBlock_inequalityOperator_signatureOverride": "Inequality operator",
  "dropletBlock_lessThanOperator_description": "Compare two numbers",
  "dropletBlock_lessThanOperator_signatureOverride": "Less than operator",
  "dropletBlock_lessThanOrEqualOperator_description": "Tests whether a value is less than or equal to another value. Returns true if the value on the left-hand side of the expression is less than or equal to the value on the right-hand side of the expression.",
  "dropletBlock_lessThanOrEqualOperator_signatureOverride": "Less than or equal operator",
  "dropletBlock_mathAbs_description": "Ia valoarea absolută a lui x",
  "dropletBlock_mathAbs_param0": "x",
  "dropletBlock_mathAbs_param0_description": "An arbitrary number.",
  "dropletBlock_mathAbs_signatureOverride": "Math.abs(x)",
  "dropletBlock_mathMax_description": "Ia valoarea maximă dintre una sau mai multe valori n1, n2,..., nX",
  "dropletBlock_mathMax_param0": "n1, n2,..., nX",
  "dropletBlock_mathMax_param0_description": "One or more numbers to compare.",
  "dropletBlock_mathMax_signatureOverride": "Math.max(n1, n2, ..., nX)",
  "dropletBlock_mathMin_description": "Ia valoarea minimă dintre una sau mai multe valori n1, n2,..., nX",
  "dropletBlock_mathMin_param0": "n1, n2,..., nX",
  "dropletBlock_mathMin_param0_description": "One or more numbers to compare.",
  "dropletBlock_mathMin_signatureOverride": "Math.min(n1, n2, ..., nX)",
  "dropletBlock_mathRandom_description": "Returnează un număr aleatoriu de la 0 (inclusiv) până la, dar fără să includă, 1 (exclusiv)",
  "dropletBlock_mathRandom_signatureOverride": "Matematică.aleatorie()",
  "dropletBlock_mathRound_description": "Rotunjeşte un număr la cel mai apropiat întreg",
  "dropletBlock_mathRound_param0": "x",
  "dropletBlock_mathRound_param0_description": "An arbitrary number.",
  "dropletBlock_mathRound_signatureOverride": "Math.round(x)",
  "dropletBlock_multiplyOperator_description": "Multiply two numbers",
  "dropletBlock_multiplyOperator_signatureOverride": "Multiply operator",
  "dropletBlock_notOperator_description": "Logical NOT of a boolean",
  "dropletBlock_notOperator_signatureOverride": "AND boolean operator",
  "dropletBlock_orOperator_description": "Logical OR of two booleans",
  "dropletBlock_orOperator_signatureOverride": "OR boolean operator",
  "dropletBlock_randomNumber_description": "Returnează un număr aleatoriu în intervalul închis de la min la max.",
  "dropletBlock_randomNumber_param0": "min",
  "dropletBlock_randomNumber_param0_description": "Numărul minim returnat",
  "dropletBlock_randomNumber_param1": "max",
  "dropletBlock_randomNumber_param1_description": "Numărul maxim returnat",
  "dropletBlock_return_description": "Return a value from a function",
  "dropletBlock_return_signatureOverride": "returnează",
  "dropletBlock_setAttribute_description": "Sets the given value",
  "dropletBlock_subtractOperator_description": "Subtract two numbers",
  "dropletBlock_subtractOperator_signatureOverride": "Subtract operator",
  "dropletBlock_whileBlock_description": "Repeat something while a condition is true",
  "dropletBlock_whileBlock_signatureOverride": "while loop",
  "emptyBlockInFunction": "Funcţia {name} are o intrare necompletată.",
  "emptyBlockInVariable": "Variabila {name} are o intrare necompletată.",
  "emptyBlocksErrorMsg": "Blocul \"Repetă\" sau \"Dacă\" trebuie să aibe alte blocuri în interiorul său  pentru a putea funcționa. Asigură-te că blocul interior se încadrează corect în blocul care îl conține.",
  "emptyExampleBlockErrorMsg": "Ai nevoie de cel puţin două exemple în funcţia {functionName}. Asigură-te că fiecare exemplu are un apel şi un rezultat.",
  "emptyFunctionBlocksErrorMsg": "Blocul de funcţie trebuie să aibă alte blocuri în interior ca să funcţioneze.",
  "emptyFunctionalBlock": "Ai un bloc necompletat.",
  "emptyTopLevelBlock": "Nu există blocuri pentru a rula programul. Trebuie să atașezi un bloc la blocul {topLevelBlockName}.",
  "end": "șfârșit",
  "errorEmptyFunctionBlockModal": "În interiorul definiției funcției tale trebuie să includem blocuri. Dă clic pe ”editare” și trage blocuri în interiorul blocului verde.",
  "errorIncompleteBlockInFunction": "Fă clic pe \"editare\" pentru a te asigura că nu lipsesc blocuri în interiorul definiţiei funcţiei tale.",
  "errorParamInputUnattached": "Amintește-ți să ataşezi un bloc pentru fiecare parametru de intrare în blocul funcţiei din spaţiul tău de lucru.",
  "errorQuestionMarksInNumberField": "Încearcă să înlocuiești \"???\" cu o valoare.",
  "errorRequiredParamsMissing": "Creează un parametru pentru funcţia ta făcând clic pe \"editare\" şi adăugând parametrii necesari. Glisează noile blocuri parametru în definiţia funcţiei tale.",
  "errorUnusedFunction": "Ai creat o funcţie, dar nu ai folosit-o în spaţiul tău de lucru! Fă clic pe \"Funcţii\" în caseta de instrumente şi asigură-te că o folosești în programul tău.",
  "errorUnusedParam": "Ai adăugat un bloc de parametri, dar nu l-ai utilizat în definiţie. Asigură-te de utilizarea parametrului tău făcând clic pe \"editare\" şi plasând blocul parametru în interiorul blocului verde.",
  "exampleErrorMessage": "Funcţia {functionName} are unul sau mai multe exemple care trebuie modificate. Asigură-te că acestea se potrivesc cu definiţia ta şi răspund la întrebare.",
  "examplesFailedOnClose": "Unul sau mai multe dintre exemple tale nu corespund(e) definiţiei tale. Verifică-ți exemplele înainte de a închide",
  "extraTopBlocks": "Ai blocuri neataşate.",
  "extraTopBlocksWhenRun": "Ai blocuri neataşate. Ai vrut să le ataşezi la blocul \"când rulează\"?",
  "finalStage": "Felicitări! Ai terminat ultima etapă.",
  "finalStageTrophies": "Felicitări! Ai terminat etapa finală şi ai câştigat {numTrophies, plural, one {un trofeu} other {# trofee}}.",
  "finish": "Sfârsit",
  "generatedCodeInfo": "Chiar și în universităţi de top se predă programarea bazată pe blocuri de coduri (de exemplu, {berkeleyLink}, {harvardLink}). Dar în esență, blocurile de cod pe care le-ai compus pot fi de asemenea afișate în JavaScript, limbajul de programare cel mai utilizat din lume:",
  "hashError": "Ne pare rău, '%1' nu corespunde cu nici un program salvat.",
  "help": "Ajutor",
  "hideToolbox": "(Ascunde)",
  "hintHeader": "Iată un indiciu:",
  "hintPrompt": "Ai nevoie de ajutor?",
  "hintRequest": "Vezi indiciu",
  "hintReviewTitle": "Revizuiește-ți sugestiile",
  "hintSelectInstructions": "Instrucțiuni și sugestii anterioare",
  "hintSelectNewHint": "Obține o nouă sugestie",
  "hintTitle": "Sugestie:",
  "iconSearchPlaceholder": "Search for an icon...",
  "ignore": "Ignoră",
  "infinity": "Infinit",
  "jump": "sari",
  "keepPlaying": "Joacă în continuare",
  "levelIncompleteError": "Utilizezi toate tipurile de blocuri necesare, dar nu așa cum trebuie.",
  "listVariable": "listă",
  "makeYourOwnFlappy": "Crează-ți propriul tău joc Flappy",
  "missingRecommendedBlocksErrorMsg": "Nu chiar așa. Încearcă utilizarea unui bloc pe care nu l-ai mai folosit.",
  "missingRequiredBlocksErrorMsg": "Nu chiar așa. Trebuie să utilizezi un bloc pe care nu l-ai mai folosit până acum.",
  "nestedForSameVariable": "Utilizezi aceeaşi variabilă în interiorul a două sau a mai multor bucle imbricate. Utilizează nume de variabile unice pentru a evita buclele infinite.",
  "nextLevel": "Congratulations! You have completed this puzzle.",
  "nextLevelTrophies": "Felicitări! Ai terminat Puzzle-ul {puzzleNumber} și ai câștigat {numTrophies, plural, one {a trophy} other {# trophies}}.",
  "nextPuzzle": "Puzzle-ul următor",
  "nextStage": "Felicitări! Ai terminat {stageName}.",
  "nextStageTrophies": "Felicitări! Ai finalizat Etapa {stageName} și ai câștigat {numTrophies, plural, one {a trophy} other {# trophies}}.",
  "noIconsFound": "No icons found",
  "numBlocksNeeded": "This puzzle can be solved with %1 blocks.",
  "numLinesOfCodeWritten": "Ai scris doar {numLines, plural, one {1 line} other {# lines}} de cod!",
  "openWorkspace": "Cum funcţionează",
  "orientationLock": "Oprește blocarea de orientare în setările dispozitivului.",
  "pause": "Break",
  "play": "joacă",
  "print": "Tipărire",
  "projectWarning": "Note: You are on a level that is part of a longer project. Changes made on this level will also appear in other levels in the project.",
  "puzzleTitle": "Puzzle {puzzle_number} din {stage_total}",
  "readonlyWorkspaceHeader": "Doar vizionare: ",
  "recommendedBlockContextualHintTitle": "Încercaţi să utilizaţi un bloc ca acesta pentru a rezolva puzzle-ul.",
  "repeat": "repetă",
  "resetProgram": "Resetează",
  "rotateText": "Rotește dispozitivul tău.",
  "runProgram": "Rulează",
  "runTooltip": "Rulează programul definit de blocuri în spațiul de lucru.",
  "runtimeErrorMsg": "Programul nu a rulat cu succes. Elimină linia {lineNumber} şi încearcă din nou.",
  "saveToGallery": "Salvare în galerie",
  "savedToGallery": "Salvat în galerie!",
  "score": "scor",
  "sendToPhone": "Trimite pe telefon",
  "shareFailure": "Ne pare rău, nu putem distribui acest program.",
  "shareWarningsAge": "Te rugăm să-ți completezi vârsta mai jos și să apeși butonul OK pentru a continua.",
  "shareWarningsMoreInfo": "Informații suplimentare",
  "shareWarningsStoreData": "Această aplicație construită în Studio-ul Code stochează informații care ar putea fi vizualizate de către oricine prin intermediul acestui link, deci ai grijă dacă ți se cere să furnizezi informații personale.",
  "showBlock": "Get a block",
  "showBlocksHeader": "Afișează blocurile",
  "showCodeHeader": "Arată codul",
  "showGeneratedCode": "Arată codul",
  "showTextHeader": "Afișare Text",
  "showToolbox": "Arată cutia de instrumente",
  "showVersionsHeader": "Istoricul versiunilor",
  "signup": "Înscrie-te la cursul introductiv",
  "stepIn": "Step in",
  "stepOver": "Step over",
  "stepOut": "Step out",
  "stringEquals": "şir=?",
  "submit": "Trimite",
  "submitYourProject": "Înregistrează-ți proiectul",
  "submitYourProjectConfirm": "Nu-ți mai poți edita proiectul după ce l-ai înregistrat, ești sigur că vrei să-l înregistrezi?",
  "unsubmit": "Retrage",
  "unsubmitYourProject": "Retrage-ți proiectul",
  "unsubmitYourProjectConfirm": "Retragerea proiectului tău va reseta data înscrierii lui, sigur îl retragi?",
  "subtitle": "un mediu de programare vizual",
  "syntaxErrorMsg": "Programul conţine o greşeală de scriere. Te rugăm să elimini linia {lineNumber} şi să încerci din nou.",
  "textVariable": "scris",
  "toggleBlocksErrorMsg": "Trebuie să corectezi o eroare în programul tău înainte să poată fi listată ca bloc.",
  "tooManyBlocksMsg": "Acest puzzle poate fi rezolvat cu blocuri <x id='START_SPAN'/><x id='END_SPAN'/>.",
  "tooMuchWork": "M-ai făcut să lucrez foarte mult! Ai putea să încerci să repeți de mai puține ori?",
  "toolboxHeader": "Blocuri",
  "toolboxHeaderDroplet": "Cutie de instrumente",
  "totalNumLinesOfCodeWritten": "Totalul all-time: {numLines, plural, one {1 linie} other {# linii}} de cod.",
  "tryAgain": "Încearcă din nou",
  "tryBlocksBelowFeedback": "Încearcă să utilizezi unul din blocurile de mai jos:",
  "tryHOC": "Încearcă Ora de Cod",
  "unnamedFunction": "Ai o variabilă sau o funcţie care nu are nume. Nu uita să dai tuturor elementelor câte un nume descriptiv.",
  "wantToLearn": "Vrei să înveți să codezi?",
  "watchVideo": "Urmărește clipul video",
  "when": "când",
  "whenRun": "când rulezi",
  "workspaceHeaderShort": "Spaţiu de lucru: ",
  "errorGenericLintError": "Your program contains an editor warning that needs to be corrected. Hover over the icons near the line numbers in the editor to learn more.",
  "yes": "Yes",
  "viewData": "View Data",
  "tryAgainText": "Keep working",
  "shareGame": "Share your app:",
  "shareApplabTwitter": "Check out the app I made. I wrote it myself with @codeorg",
  "reportAbuse": "Report Abuse",
  "repeatForeverTooltip": "Execute the actions in this block repeatedly while the app is running.",
  "repeatDo": "do",
  "repeatForever": "repeat forever",
  "reinfFeedbackMsg": "You're finished! Click \"Continue\" to move on to the next level.",
  "privacyPolicy": "Privacy Policy",
  "no": "No",
  "manageAssets": "Click to view or update your images and sounds.",
  "makeMyOwnApp": "Make my own app",
  "finalLevel": "Congratulations! You have solved the final puzzle.",
  "dropletBlock_write_param0_description": "The text or HTML you want appended to the bottom of your application",
  "dropletBlock_write_description": "Appends the specified text to the bottom of the document. The text can also be formatted as HTML.",
  "dropletBlock_updateRecord_param2_description": "A callback function that is asynchronously called when the call to updateRecord() is finished.",
  "dropletBlock_updateRecord_param1_description": "The record data.",
  "dropletBlock_updateRecord_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_updateRecord_description": "Using App Lab's table data storage, updates the provided record in the table with the specified name. The record must be uniquely identified with its id field. When the call is completed, the callback function is called.",
  "dropletBlock_turnTo_param0_description": "The new angle to set the turtle's direction to.",
  "dropletBlock_turnTo_description": "Changes the turtle's direction to a specific angle. 0 is up, 90 is right, 180 is down, and 270 is left.",
  "dropletBlock_turnRight_param0_description": "The angle to turn right.",
  "dropletBlock_turnRight_description": "Rotates the turtle right by the specified angle. The turtle’s position remains the same.",
  "dropletBlock_turnLeft_param0_description": "The angle to turn left.",
  "dropletBlock_turnLeft_description": "Rotates the turtle left by the specified angle. The turtle’s position remains the same.",
  "dropletBlock_toUpperCase_description": "Converts the original string to use all uppercase letters and returns it as a new string",
  "dropletBlock_toLowerCase_description": "Converts the original string to use all lowercase letters and returns it as a new string",
  "dropletBlock_textLabel_param1_description": "The value to display for the label.",
  "dropletBlock_textLabel_param0_description": "A unique identifier for the label control. The id is used for referencing the created label. For example, to assign event handlers.",
  "dropletBlock_textLabel_description": "Creates a text label on the screen displaying the text provided and referenced by the given id at default location (0,0).",
  "dropletBlock_textInput_param1_description": "The value to display for the input.",
  "dropletBlock_textInput_param0_description": "A unique identifier for the input control. The id is used for referencing the created input. For example, to assign event handlers.",
  "dropletBlock_textInput_description": "Create a text input and assign it an element id",
  "dropletBlock_substring_param1_description": "The position (up to, but not including) to stop the extraction.",
  "dropletBlock_substring_param1": "end",
  "dropletBlock_substring_param0_description": "The position to start the extraction.",
  "dropletBlock_substring_param0": "start",
  "dropletBlock_substring_description": "Returns a string extracted between the start and end positions of the original string",
  "dropletBlock_startWebRequest_param1_description": "A callback function to execute.",
  "dropletBlock_startWebRequest_param0_description": "The web address of a service that returns data.",
  "dropletBlock_startWebRequest_description": "Request data from the internet and execute code when the request is complete.",
  "dropletBlock_speed_param0_description": "The speed of the app's execution in the range of (1-100).",
  "dropletBlock_speed_description": "Sets the speed for the app's execution, which includes the turtle's speed.",
  "dropletBlock_show_description": "Makes the turtle visible at its current location.",
  "dropletBlock_showElement_param0_description": "The id of the element to show.",
  "dropletBlock_showElement_description": "Shows the element with the provided id.",
  "dropletBlock_setTimeout_param1_description": "The number of milliseconds to wait before executing the function.",
  "dropletBlock_setTimeout_param0_description": "A function to execute.",
  "dropletBlock_setTimeout_description": "Set a timer and execute code when that number of milliseconds has elapsed",
  "dropletBlock_setText_param1_description": "The text to display.",
  "dropletBlock_setText_param0_description": "The id of the specified element.",
  "dropletBlock_setText_description": "Set the text for the specified element",
  "dropletBlock_setStyle_description": "Add CSS style text to an element",
  "dropletBlock_setStrokeWidth_param0_description": "The width in pixels with which to draw lines, circles, and rectangles.",
  "dropletBlock_setStrokeWidth_description": "Set the line width for the active canvas.",
  "dropletBlock_setStrokeColor_param0_description": "The color name or hex value representing the color.",
  "dropletBlock_setStrokeColor_description": "Set the stroke color for the active canvas.",
  "dropletBlock_setProperty_param2_description": "The new property value.",
  "dropletBlock_setProperty_param1_description": "The property to change.",
  "dropletBlock_setProperty_param0_description": "The id of the specified element.",
  "dropletBlock_setProperty_description": "Sets a property to a new value for the specified element.",
  "dropletBlock_setSize_param2_description": "The height to set the element to, in pixels.",
  "dropletBlock_setSize_param1_description": "The width to set the element to, in pixels.",
  "dropletBlock_setSize_param0_description": "The id of the specified element.",
  "dropletBlock_setSize_description": "Sets the width and height for the specified element.",
  "dropletBlock_setScreen_param0_description": "The unique identifier for the screen. Must begin with a letter, contain no spaces, and may contain letters, digits, - and _.",
  "dropletBlock_setScreen_description": "Sets the screen to the given screenId.",
  "dropletBlock_setRed_param3_description": "The amount of red (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRed_param3": "redValue",
  "dropletBlock_setRed_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRed_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRed_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_setRed_description": "Sets the amount of red (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data to the redValue input amount.",
  "dropletBlock_setRGB_param6_description": "Optional. The amount of opacity (from 0 to 255) to set in the pixel. Defaults to 255 (full opacity).",
  "dropletBlock_setRGB_param6": "alpha",
  "dropletBlock_setRGB_param5_description": "The amount of blue (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param5": "blue",
  "dropletBlock_setRGB_param4_description": "The amount of green (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param4": "green",
  "dropletBlock_setRGB_param3_description": "The amount of red (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param3": "red",
  "dropletBlock_setRGB_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRGB_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRGB_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_setRGB_description": "Sets the RGB color values (ranging from 0 to 255) of the pixel located at the given x and y position in the given image data to the input red, green, blue amounts.",
  "dropletBlock_setPosition_param4_description": "Optional. The height to set the element to, in pixels.",
  "dropletBlock_setPosition_param3_description": "Optional. The width to set the element to, in pixels.",
  "dropletBlock_setPosition_param2_description": "The y coordinate on the screen to move the element to.",
  "dropletBlock_setPosition_param1_description": "The x coordinate on the screen to move the element to.",
  "dropletBlock_setPosition_param0_description": "The id of the specified element.",
  "dropletBlock_setPosition_description": "Positions the specified element at an x,y screen coordinate, and optionally sets a new width and height for the element.",
  "dropletBlock_setParent_description": "Set an element to become a child of a parent element",
  "dropletBlock_setNumber_param1_description": "The number value to display.",
  "dropletBlock_setNumber_param0_description": "The id of the specified element.",
  "dropletBlock_setNumber_description": "Set the number value for the specified element",
  "dropletBlock_setKeyValueSync_param1_description": "The data to be stored.",
  "dropletBlock_setKeyValueSync_param1": "value",
  "dropletBlock_setKeyValueSync_param0_description": "The name of the key to be stored.",
  "dropletBlock_setKeyValueSync_param0": "key",
  "dropletBlock_setKeyValueSync_description": "Stores a key/value pair in App Lab's key/value data storage.",
  "dropletBlock_setKeyValue_param2_description": "A callback function that is asynchronously called when the call to setKeyValue is finished.",
  "dropletBlock_setKeyValue_param1_description": "The data to be stored.",
  "dropletBlock_setKeyValue_param0_description": "The name of the key to be stored.",
  "dropletBlock_setKeyValue_description": "Stores a key/value pair in App Lab's key/value data storage, and calls the callback function when the action is finished.",
  "dropletBlock_setInterval_param1_description": "The number of milliseconds between each execution of the function.",
  "dropletBlock_setInterval_param0_description": "A function to execute.",
  "dropletBlock_setInterval_description": "Execute the callback function code every time a certain number of milliseconds has elapsed, until canceled.",
  "dropletBlock_setImageURL_param1_description": "TThe source URL of the image to be displayed on screen.",
  "dropletBlock_setImageURL_param0_description": "The id of the image element.",
  "dropletBlock_setImageURL_description": "Sets the URL for the provided image element id.",
  "dropletBlock_setGreen_param3_description": "The amount of green (from 0 to 255) to set in the pixel.",
  "dropletBlock_setGreen_param3": "greenValue",
  "dropletBlock_setGreen_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setGreen_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setGreen_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_setGreen_description": "Sets the amount of green (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data to the greenValue input amount.",
  "dropletBlock_setFillColor_param0_description": "The color name or hex value representing the color.",
  "dropletBlock_setFillColor_description": "Set the fill color for the active canvas.",
  "dropletBlock_setChecked_param1": "checked",
  "dropletBlock_setChecked_param0": "id",
  "dropletBlock_setChecked_description": "Set the state of a checkbox or radio button",
  "dropletBlock_setBlue_param3_description": "The amount of blue (from 0 to 255) to set in the pixel.",
  "dropletBlock_setBlue_param3": "blueValue",
  "dropletBlock_setBlue_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setBlue_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setBlue_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_setBlue_description": "Sets the amount of blue (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data to the blueValue input amount.",
  "dropletBlock_setAlpha_param3_description": "The amount of alpha (opacity) (from 0 to 255) to set in the pixel.",
  "dropletBlock_setAlpha_param3": "alphaValue",
  "dropletBlock_setAlpha_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setAlpha_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setAlpha_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_setAlpha_description": "Sets the amount of alpha (opacity) (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data.",
  "dropletBlock_setActiveCanvas_param0_description": "The id of the canvas element to activate.",
  "dropletBlock_setActiveCanvas_description": "Change the active canvas to the canvas with the specified id (other canvas commands only affect the active canvas).",
  "dropletBlock_removeItem_param1_description": "The position of the item to remove from the array.",
  "dropletBlock_removeItem_param0_description": "The array to be modified.",
  "dropletBlock_removeItem_description": "Remove the item at the specified position from the array.",
  "dropletBlock_rect_param3_description": "The vertical height in pixels of the rectangle.",
  "dropletBlock_rect_param2_description": "The horizontal width in pixels of the rectangle.",
  "dropletBlock_rect_param1_description": "The y position in pixels of the upper left corner of the rectangle.",
  "dropletBlock_rect_param0_description": "The x position in pixels of the upper left corner of the rectangle.",
  "dropletBlock_rect_description": "Draws a rectangle onto the active canvas positioned at upperLeftX and upperLeftY, and size width and height.",
  "dropletBlock_readRecords_param2_description": "A callback function that is asynchronously called when the call to readRecords() is finished.",
  "dropletBlock_readRecords_param1_description": "The search terms.",
  "dropletBlock_readRecords_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_readRecords_description": "Using App Lab's table data storage, reads the records from the provided table name that match the specified search terms. When the call is completed, the callback function is called and is passed the array of records.",
  "dropletBlock_radioButton_param2_description": "The group that the radio button is associated with. Only one button in a group can be checked at a time.",
  "dropletBlock_radioButton_param2": "group",
  "dropletBlock_radioButton_param1_description": "Whether the radio button is initially checked.",
  "dropletBlock_radioButton_param0_description": "A unique identifier for the radio button. The id is used for referencing the radio button control. For example, to assign event handlers.",
  "dropletBlock_radioButton_description": "Creates a radio button and assigns it to a group for choosing from a predefined set of options. Only one radio button in a group can be selected at a time",
  "dropletBlock_putImageData_param2_description": "The y position in pixels starting from the upper left corner of image to place the data on the canvas.",
  "dropletBlock_putImageData_param1_description": "The x position in pixels starting from the upper left corner of image to place the data on the canvas.",
  "dropletBlock_putImageData_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_putImageData_description": "Puts the input image data onto the current canvas element starting at position x, y.",
  "dropletBlock_playSound_param0_description": "The URL to a sound file. Can be an project asset name or external URL.",
  "dropletBlock_playSound_description": "Plays the MP3 sound file from the specified URL.",
  "dropletBlock_penWidth_param0_description": "The diameter of the circles drawn behind the turtle as it moves.",
  "dropletBlock_penWidth_description": "Sets the width of the line in pixels that the turtle draws behind it as it moves.",
  "dropletBlock_penUp_description": "Picks the pen up so the turtle does not draw a line as it moves.",
  "dropletBlock_penRGB_param3_description": "Optional. The opacity, a number between 0.0 (fully transparent) and 1.0 (fully opaque), of the color used by the turtle for drawing lines and dots. Default is 1.0.",
  "dropletBlock_penRGB_param3": "a",
  "dropletBlock_penRGB_param2_description": "The amount of blue (0-255) in the pen used by the turtle for drawing lines and dots.",
  "dropletBlock_penRGB_param1_description": "The amount of green (0-255) in the pen used by the turtle for drawing lines and dots.",
  "dropletBlock_penRGB_param0_description": "The amount of red (0-255) in the pen used by the turtle for drawing lines and dots.",
  "dropletBlock_penRGB_description": "Using RGBA values, sets the color of the pen used by the turtle for drawing lines and dots.",
  "dropletBlock_penDown_description": "Puts the pen down so the turtle draws a line behind it as it moves.",
  "dropletBlock_penColor_param0_description": "The color of the line left behind the turtle as it moves.",
  "dropletBlock_penColor_description": "Sets the color of the pen used by the turtle for drawing lines and dots.",
  "dropletBlock_onEvent_param2_description": "A function to execute.",
  "dropletBlock_onEvent_param1_description": "The type of event to respond to.",
  "dropletBlock_onEvent_param0_description": "The ID of the UI control to which this function applies.",
  "dropletBlock_onEvent_description": "Executes the callback code when a specific event type occurs for the specified UI element id.",
  "dropletBlock_move_param1_description": "The number of pixels to move the turtle down.",
  "dropletBlock_move_param0_description": "The number of pixels to move the turtle right.",
  "dropletBlock_move_description": "Moves the turtle by adding x pixels to the turtle's current x position and y pixels to the turtle's current y position.",
  "dropletBlock_moveTo_param1_description": "The y coordinate on the screen to move the turtle.",
  "dropletBlock_moveTo_param0_description": "The x coordinate on the screen to move the turtle.",
  "dropletBlock_moveTo_description": "Moves the turtle to a specific (x,y) position on the screen.",
  "dropletBlock_moveForward_param0_description": "The number of pixels to move the turtle forward in its current direction. If not provided, the turtle will move forward 25 pixels.",
  "dropletBlock_moveForward_description": "Moves the turtle forward a given number of pixels in the current direction.",
  "dropletBlock_moveBackward_param0_description": "The number of pixels to move the turtle back in its current direction. If not provided, the turtle will move back 25 pixels.",
  "dropletBlock_moveBackward_description": "Moves the turtle backward a given number of pixels from the current direction.",
  "dropletBlock_listLength_signatureOverride": "[list].length",
  "dropletBlock_listLength_description": "The length of the array",
  "dropletBlock_line_param3_description": "The y position in pixels of the end of the line.",
  "dropletBlock_line_param2_description": "The x position in pixels of the end of the line.",
  "dropletBlock_line_param1_description": "The y position in pixels of the beginning of the line.",
  "dropletBlock_line_param0_description": "The x position in pixels of the beginning of the line.",
  "dropletBlock_line_description": "Draws a line on the active canvas from x1, y1 to x2, y2.",
  "dropletBlock_length_description": "The length of the string",
  "dropletBlock_insertItem_param2_description": "The item to insert into the array.",
  "dropletBlock_insertItem_param1_description": "The position to insert the item into the array.",
  "dropletBlock_insertItem_param0_description": "The array to be modified.",
  "dropletBlock_insertItem_description": "Insert the item into the array at the specified position.",
  "dropletBlock_innerHTML_description": "Set the inner HTML for the element with the specified id",
  "dropletBlock_indexOf_param0_description": "The string to search for.",
  "dropletBlock_indexOf_param0": "searchValue",
  "dropletBlock_indexOf_description": "Returns the position of the first occurrence of searchValue within the string",
  "dropletBlock_includes_param0_description": "The string to search for.",
  "dropletBlock_includes_param0": "searchValue",
  "dropletBlock_includes_description": "Returns true if searchValue is found within the string",
  "dropletBlock_image_param1_description": "The source URL of the image to be displayed on screen.",
  "dropletBlock_image_param0_description": "The id of the image element.",
  "dropletBlock_image_description": "Displays the image from the provided url on the screen.",
  "dropletBlock_imageUploadButton_description": "Create an image upload button and assign it an element id",
  "dropletBlock_hide_description": "Makes the turtle invisible at its current location.",
  "dropletBlock_hideElement_param0_description": "The id of the element to hide.",
  "dropletBlock_hideElement_description": "Hides the element with the provided id so it is not shown on the screen.",
  "dropletBlock_getY_description": "Gets the current y coordinate in pixels of the turtle.",
  "dropletBlock_getYPosition_param0_description": "The id of the specified element.",
  "dropletBlock_getYPosition_description": "Get the y position of the specified element.",
  "dropletBlock_getX_description": "Gets the current x coordinate in pixels of the turtle.",
  "dropletBlock_getXPosition_param0_description": "The id of the specified element.",
  "dropletBlock_getXPosition_description": "Get the x position of the specified element.",
  "dropletBlock_getUserId_description": "Gets a unique identifier for the current user of this app.",
  "dropletBlock_getText_param0_description": "The id of the specified element.",
  "dropletBlock_getText_description": "Get the text from the specified element",
  "dropletBlock_getRed_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getRed_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getRed_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_getRed_description": "Gets the amount of red (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data.",
  "dropletBlock_getNumber_param0_description": "The id of the specified element.",
  "dropletBlock_getNumber_description": "Get the number value from the specified element",
  "dropletBlock_getKeyValueSync_param0_description": "The name of the key to be retrieved.",
  "dropletBlock_getKeyValueSync_param0": "key",
  "dropletBlock_getKeyValueSync_description": "Retrieves the value stored at the provided key name in App Lab's key/value data storage.",
  "dropletBlock_getKeyValue_param1_description": "A callback function that is asynchronously called when the call to getKeyValue is finished.",
  "dropletBlock_getKeyValue_param0_description": "The name of the key to be retrieved.",
  "dropletBlock_getKeyValue_description": "Retrieves the value stored at the provided key name in App Lab's key/value data storage. The value is returned as a parameter to callback function when the retrieval is finished.",
  "dropletBlock_getImageURL_param0_description": "The id of the image element.",
  "dropletBlock_getImageURL_description": "Get the URL for the provided image element id",
  "dropletBlock_getImageData_param3_description": "The height of the bounding rectangle to capture the image data.",
  "dropletBlock_getImageData_param2_description": "The width of the bounding rectangle to capture the image data.",
  "dropletBlock_getImageData_param1_description": "The y position in pixels to start the capture.",
  "dropletBlock_getImageData_param0_description": "The x position in pixels to start the capture.",
  "dropletBlock_getImageData_description": "Returns an object representing the image data captured from the canvas with the rectangle specified by x, y, width, and height.",
  "dropletBlock_getGreen_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getGreen_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getGreen_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_getGreen_description": "Gets the amount of green (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data.",
  "dropletBlock_getDirection_description": "Returns the current direction that the turtle is facing. 0 degrees is pointing up.",
  "dropletBlock_getChecked_param0_description": "The id of the specified element.",
  "dropletBlock_getChecked_description": "Get the state of a checkbox or radio button",
  "dropletBlock_getBlue_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getBlue_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getBlue_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_getBlue_description": "Gets the amount of blue (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data.",
  "dropletBlock_getAttribute_description": "Gets the given attribute",
  "dropletBlock_getAlpha_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getAlpha_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getAlpha_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_getAlpha_description": "Returns the amount of alpha (opacity) (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data.",
  "dropletBlock_dropdown_signatureOverride": "dropdown(id, option1, option2, ..., optionX)",
  "dropletBlock_dropdown_description": "Create a dropdown, assign it an element id, and populate it with a list of items",
  "dropletBlock_drawImageURL_param0_description": "The URL to an image. Can be an project asset name or external URL.",
  "dropletBlock_drawImageURL_description": "Draws the image at the specific URL onto the active canvas element.",
  "dropletBlock_drawImage_param4": "height",
  "dropletBlock_drawImage_param3": "width",
  "dropletBlock_drawImage_param2_description": "The y position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param2": "y",
  "dropletBlock_drawImage_param1_description": "The x position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param1": "x",
  "dropletBlock_drawImage_param0_description": "The x position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param0": "id",
  "dropletBlock_drawImage_description": "Draws the specified image or canvas element onto the active canvas at the specified position, and optionally scales the element to the specified width and height",
  "dropletBlock_drawChartFromRecords_param5_description": "Optional. The callback function that is asynchronously called when the call to drawChartFromRecords() is finished.",
  "dropletBlock_drawChartFromRecords_param5": "callback",
  "dropletBlock_drawChartFromRecords_param4_description": "Optional. Display options for the chart.",
  "dropletBlock_drawChartFromRecords_param4": "options",
  "dropletBlock_drawChartFromRecords_param3_description": "An array of column names.",
  "dropletBlock_drawChartFromRecords_param2_description": "The name of the table to retrieve records from.",
  "dropletBlock_drawChartFromRecords_param1_description": "The chart type ('bar', 'line', 'pie', or 'scatter').",
  "dropletBlock_drawChartFromRecords_param0_description": "The chart id.",
  "dropletBlock_drawChartFromRecords_description": "Draws a chart to the specified chart element using data retrieved from the specified table.",
  "dropletBlock_drawChart_param4_description": "Optional. The callback function that is asynchronously called when the call to drawChart() is finished.",
  "dropletBlock_drawChart_param4": "callback",
  "dropletBlock_drawChart_param3_description": "Optional. Display options for the chart.",
  "dropletBlock_drawChart_param3": "options",
  "dropletBlock_drawChart_param2_description": "The chart data.",
  "dropletBlock_drawChart_param1_description": "The chart type ('bar', 'line', 'pie', or 'scatter').",
  "dropletBlock_drawChart_param0_description": "The chart id.",
  "dropletBlock_drawChart_description": "Draws a chart to the specified chart element using the data provided.",
  "dropletBlock_dot_param0_description": "The radius of the dot to draw.",
  "dropletBlock_dot_description": "Draws a dot centered at the turtle's location with the specified radius.",
  "dropletBlock_deleteRecord_param2_description": "A callback function that is asynchronously called when the call to deleteRecord() is finished.",
  "dropletBlock_deleteRecord_param1_description": "The record data.",
  "dropletBlock_deleteRecord_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_deleteRecord_description": "Using App Lab's table data storage, deletes the provided record in the table with the specified name. The record is an object that must be uniquely identified with its id field. When the call is completed, the callback function is called.",
  "dropletBlock_deleteElement_param0_description": "The id of the element to delete.",
  "dropletBlock_deleteElement_description": "Delete the element with the specified id.",
  "dropletBlock_declareAssign_str_hello_world_signatureOverride": "Declare and assign a string to a variable",
  "dropletBlock_declareAssign_str_hello_world_description": "Declare a variable and assign a string to it",
  "dropletBlock_declareAssign_list_abd_signatureOverride": "Declare and assign an array to a variable",
  "dropletBlock_declareAssign_list_abd_description": "Declare a variable and assigns an array to it with the given initial values",
  "dropletBlock_createRecord_param2_description": "A callback function that is asynchronously called when the call to createRecord() is finished.",
  "dropletBlock_createRecord_param1_description": "The record data.",
  "dropletBlock_createRecord_param0_description": "The name of the table the record should be added to. A table with the specified name gets created if it doesn't exist.",
  "dropletBlock_createRecord_description": "Using App Lab's table data storage, creates a record with a unique id in the table name provided, and calls the callback function when the action is finished.",
  "dropletBlock_createCanvas_param2_description": "The vertical height in pixels of the rectangle.",
  "dropletBlock_createCanvas_param1_description": "The horizontal width in pixels of the rectangle.",
  "dropletBlock_createCanvas_param0_description": "The id of the new canvas element.",
  "dropletBlock_createCanvas_description": "Create a canvas with the specified id, and optionally set width and height dimensions.",
  "dropletBlock_container_description": "Create a division container with the specified element id, and optionally set its inner HTML",
  "dropletBlock_console.log_param0_description": "The message string to display in the console.",
  "dropletBlock_console.log_param0": "message",
  "dropletBlock_console.log_description": "Displays the string or variable in the console display",
  "dropletBlock_clearTimeout_param0_description": "The value returned by the setTimeout function to cancel.",
  "dropletBlock_clearTimeout_param0": "timeout",
  "dropletBlock_clearTimeout_description": "Clear an existing timer by passing in the value returned from setTimeout()",
  "dropletBlock_clearInterval_param0_description": "The value returned by the setInterval function to clear.",
  "dropletBlock_clearInterval_param0": "interval",
  "dropletBlock_clearInterval_description": "Clear an existing interval timer by passing in the value returned from setInterval()",
  "dropletBlock_clearCanvas_description": "Clear all data on the active canvas",
  "dropletBlock_circle_param2_description": "The radius of the circle, in pixels.",
  "dropletBlock_circle_param1_description": "The y position in pixels of the center of the circle.",
  "dropletBlock_circle_param0_description": "The x position in pixels of the center of the circle.",
  "dropletBlock_circle_description": "Draw a circle on the active  canvas with the specified coordinates for center (x, y) and radius.",
  "dropletBlock_checkbox_param1_description": "The initial value of the checkbox.",
  "dropletBlock_checkbox_param0_description": "A unique identifier for the checkbox. The id is used for referencing the created checkbox. For example, to assign event handlers.",
  "dropletBlock_checkbox_description": "Create a checkbox and assign it an element id",
  "dropletBlock_button_param1_description": "The text displayed within the button.",
  "dropletBlock_button_param0_description": "A unique identifier for the button. The id is used for referencing the created button. For example, to assign event handlers.",
  "dropletBlock_button_description": "Creates a button on the screen displaying the text provided and referenced by the given id at default location (0,0).",
  "dropletBlock_arcRight_param1_description": "The radius of the circle that is placed right of the turtle. Must be >= 0.",
  "dropletBlock_arcRight_param0_description": "The angle along the circle to move.",
  "dropletBlock_arcRight_description": "Moves the turtle forward and to the right in a smooth, circular arc.",
  "dropletBlock_arcLeft_param1_description": "The radius of the circle that is placed left of the turtle. Must be >= 0.",
  "dropletBlock_arcLeft_param0_description": "The angle along the circle to move.",
  "dropletBlock_arcLeft_description": "Moves the turtle forward and to the left in a smooth, circular arc.",
  "dropletBlock_appendItem_param1_description": "The item to add to the end of the array.",
  "dropletBlock_appendItem_param0_description": "The array to be modified.",
  "dropletBlock_appendItem_description": "Append the item to the end of the array.",
  "designWorkspaceHeader": "Workspace",
  "designWorkspaceDescription": "Click on an element or choose it from the dropdown below to edit its properties. Create code in Events.",
  "designToolboxHeader": "Design Toolbox",
  "designToolboxDescription": "Drag the elements into your app!",
  "dataLimitAlert": "The app has been reading or writing to the database too frequently, which may result in unexpected failures.  Please let the app owner know if you keep experiencing issues.",
  "copyright": "Copyright",
  "containerTooltip": "Creates a division container and sets its inner HTML.",
  "container": "create container",
  "catEvents": "Events",
  "catControl": "Loops",
  "builtOnCodeStudio": "Built on Code Studio",
  "addEventHeader": "Click a link below to add a function to your code that will be called when the event is triggered."
}
{
  "and": "y",
  "backToPreviousLevel": "Volver al nivel anterior",
  "blocklyMessage": "Blockly",
  "blocks": "bloques",
  "booleanFalse": "falso",
  "booleanTrue": "verdadero",
  "catActions": "Actions",
  "catColour": "Color",
  "catLists": "Listas",
  "catLogic": "Logic",
  "catLoops": "Iteraciones",
  "catMath": "Math",
  "catProcedures": "Functions",
  "catText": "Text",
  "catVariables": "Variables",
  "clearPuzzle": "Volver a empezar",
  "clearPuzzleConfirm": "Esto reiniciará el puzzle a su estado inicial y borrará todos los bloques que hayas agregado o cambiado.",
  "clearPuzzleConfirmHeader": "¿Seguro que quieres empezar de nuevo?",
  "codeMode": "Código",
  "codeTooltip": "Ver el código JavaScript generado.",
  "continue": "Continue",
  "defaultTwitterText": "Mira lo que hice",
  "designMode": "Diseño",
  "dialogCancel": "Cancelar",
  "dialogOK": "OK",
  "directionEastLetter": "E",
  "directionNorthLetter": "N",
  "directionSouthLetter": "S",
  "directionWestLetter": "O",
  "dropletBlock_addOperator_description": "Suma dos números",
  "dropletBlock_addOperator_signatureOverride": "Añade un operador",
  "dropletBlock_andOperator_description": "Es verdadero solo si las dos expresiones son verdaderas de otra manera es falso",
  "dropletBlock_andOperator_signatureOverride": "Operador boleano \"AND\"",
  "dropletBlock_assign_x_description": "Asigna un valor a una variable existente. Por ejemplo, x = 0;",
  "dropletBlock_assign_x_param0": "x",
  "dropletBlock_assign_x_param0_description": "Nombre de la variable que está siendo asignada",
  "dropletBlock_assign_x_param1": "valor",
  "dropletBlock_assign_x_param1_description": "Valor de la variable que está siendo asignada.",
  "dropletBlock_assign_x_signatureOverride": "Asignar una variable",
  "dropletBlock_callMyFunction_description": "Llama a una función nombrada que no tiene parámetros",
  "dropletBlock_callMyFunction_n_description": "Llama a una función nombrada que tiene uno o más parámetros",
  "dropletBlock_callMyFunction_n_signatureOverride": "Llamar a una función con parámetros",
  "dropletBlock_callMyFunction_signatureOverride": "Llamar una función",
  "dropletBlock_declareAssign_x_array_1_4_description": "Defina una variable y asignela a una secuencia, con su valor inicial  ",
  "dropletBlock_declareAssign_x_array_1_4_param0": "x",
  "dropletBlock_declareAssign_x_array_1_4_param0_description": "El nombre que utilizarás en el programa para hacer referencia a la variable",
  "dropletBlock_declareAssign_x_array_1_4_param1": "1,2,3,4",
  "dropletBlock_declareAssign_x_array_1_4_param1_description": "Los valores iniciales de la matriz",
  "dropletBlock_declareAssign_x_array_1_4_signatureOverride": "Defina una variable asignada a una secuencia",
  "dropletBlock_declareAssign_x_description": "Declara una variable con el nombre dado después de 'var', y le asigna el valor en el lado derecho de la expresión",
  "dropletBlock_declareAssign_x_param0": "x",
  "dropletBlock_declareAssign_x_param0_description": "El nombre que utilizarás en el programa para hacer referencia a la variable",
  "dropletBlock_declareAssign_x_param1": "0",
  "dropletBlock_declareAssign_x_param1_description": "El valor inicial de la variable",
  "dropletBlock_declareAssign_x_prompt_description": "Defina como el code podra usar la variable y asignarle un valor inicial dado por el usuario",
  "dropletBlock_declareAssign_x_prompt_param0": "x",
  "dropletBlock_declareAssign_x_prompt_param0_description": "El nombre que utilizarás en el programa para hacer referencia a la variable",
  "dropletBlock_declareAssign_x_prompt_param1": "\"Introducir valor\"",
  "dropletBlock_declareAssign_x_prompt_param1_description": "La cadena que el usuario verá en el pop up cuando le pida que ingrese un valor",
  "dropletBlock_declareAssign_x_prompt_signatureOverride": "Solicite al usuario un valor y almacenelo",
  "dropletBlock_declareAssign_x_signatureOverride": "Declare una variable",
  "dropletBlock_divideOperator_description": "Dividir dos números",
  "dropletBlock_divideOperator_signatureOverride": "Operador divisor",
  "dropletBlock_equalityOperator_description": "Comprueba si dos valores son iguales. Devuelve true si el valor del lado izquierdo de la expresión es igual al valor en el lado derecho de la expresión y false en caso contrario",
  "dropletBlock_equalityOperator_param0": "x",
  "dropletBlock_equalityOperator_param0_description": "El primer valor a utilizar para la comparación.",
  "dropletBlock_equalityOperator_param1": "y",
  "dropletBlock_equalityOperator_param1_description": "El segundo valor a utilizar para la comparación.",
  "dropletBlock_equalityOperator_signatureOverride": "Operador de igualdad",
  "dropletBlock_forLoop_i_0_4_description": "Crea un bucle que consiste en una expresión de inicialización, una expresión condicional, una expresión incremental y un bloque de instrucciones los cuales se ejecutan con cada iteración del bucle",
  "dropletBlock_forLoop_i_0_4_signatureOverride": "bucle \"for\"",
  "dropletBlock_functionParams_n_description": "Un conjunto de instrucciones que toma uno o mas parámetros y realiza una tarea o calcula un valor, cuando se manda llamar la función",
  "dropletBlock_functionParams_n_signatureOverride": "Define una función con parametros",
  "dropletBlock_functionParams_none_description": "Un conjunto de instrucciones que realiza una tarea o calcula un valor, cuando se manda llamar la función",
  "dropletBlock_functionParams_none_signatureOverride": "Define una función",
  "dropletBlock_getTime_description": "Obtener la hora actual en milisegundos",
  "dropletBlock_greaterThanOperator_description": "Comprueba si un número es mayor que otro número. Devuelve true si el valor del lado izquierdo de la expresión es estrictamente mayor que el valor en el lado derecho de la expresión",
  "dropletBlock_greaterThanOperator_param0": "x",
  "dropletBlock_greaterThanOperator_param0_description": "El primer valor a utilizar para la comparación.",
  "dropletBlock_greaterThanOperator_param1": "y",
  "dropletBlock_greaterThanOperator_param1_description": "El segundo valor a utilizar para la comparación.",
  "dropletBlock_greaterThanOperator_signatureOverride": "Operador mayor que",
  "dropletBlock_ifBlock_description": "Se ejecuta un bloque de sentencias si la condición especificada es verdadera",
  "dropletBlock_ifBlock_signatureOverride": "instrucción \"if\"",
  "dropletBlock_ifElseBlock_description": "Se ejecuta un bloque de sentencias si la condición especificada es verdadera; de lo contrario, se ejecutan el bloque de sentencias en la cláusula else",
  "dropletBlock_ifElseBlock_signatureOverride": "Instruccion \"if/else\"",
  "dropletBlock_inequalityOperator_description": "Comprueba si dos valores no son iguales. Devuelve true si el valor del lado izquierdo de la expresión no es igual al valor en el lado derecho de la expresión",
  "dropletBlock_inequalityOperator_param0": "x",
  "dropletBlock_inequalityOperator_param0_description": "El primer valor a utilizar para la comparación.",
  "dropletBlock_inequalityOperator_param1": "y",
  "dropletBlock_inequalityOperator_param1_description": "El segundo valor a utilizar para la comparación.",
  "dropletBlock_inequalityOperator_signatureOverride": "Operador de desigualdad",
  "dropletBlock_lessThanOperator_description": "Comprueba si un valor es menor que otro valor. Devuelve true si el valor del lado izquierdo de la expresión es estrictamente menor que el valor en el lado derecho de la expresión",
  "dropletBlock_lessThanOperator_param0": "x",
  "dropletBlock_lessThanOperator_param0_description": "El primer valor a utilizar para la comparación.",
  "dropletBlock_lessThanOperator_param1": "y",
  "dropletBlock_lessThanOperator_param1_description": "El segundo valor a utilizar para la comparación.",
  "dropletBlock_lessThanOperator_signatureOverride": "Operador menor que",
  "dropletBlock_mathAbs_description": "Devuelve el valor absoluto de x",
  "dropletBlock_mathAbs_param0": "x",
  "dropletBlock_mathAbs_param0_description": "Un número arbitrario.",
  "dropletBlock_mathAbs_signatureOverride": "Math.abs(x)",
  "dropletBlock_mathMax_description": "Devuelve el valor mínimo entre uno o mas valores n1, n2, ..., nX",
  "dropletBlock_mathMax_param0": "n1, n2,..., nX",
  "dropletBlock_mathMax_param0_description": "Uno o más números para comparar.",
  "dropletBlock_mathMax_signatureOverride": "Math.max(n1, n2, ..., nX)",
  "dropletBlock_mathMin_description": "Devuelve el valor mínimo entre uno o mas valores n1, n2, ..., nX",
  "dropletBlock_mathMin_param0": "n1, n2,..., nX",
  "dropletBlock_mathMin_param0_description": "Uno o más números para comparar.",
  "dropletBlock_mathMin_signatureOverride": "Math.min(n1, n2, ..., nX)",
  "dropletBlock_mathRound_description": "Redondea un número al entero más cercano",
  "dropletBlock_mathRound_param0": "x",
  "dropletBlock_mathRound_param0_description": "Un número arbitrario.",
  "dropletBlock_mathRound_signatureOverride": "Math.round(x)",
  "dropletBlock_multiplyOperator_description": "Multiplicar dos números",
  "dropletBlock_multiplyOperator_signatureOverride": "Operador de multiplicación",
  "dropletBlock_notOperator_description": "Devuelve false si la expresión se puede convertir a verdadero; de lo contrario, devuelve verdadero",
  "dropletBlock_notOperator_signatureOverride": "Operador booleano NOT",
  "dropletBlock_orOperator_description": "Devuelve verdadero cuando cualquier expresión es verdadero y falso si no",
  "dropletBlock_orOperator_signatureOverride": "Operador boleano \"OR\"",
  "dropletBlock_randomNumber_max_description": "Devuelve un número aleatorio que va de cero al máximo, incluyendo max y cero en el rango",
  "dropletBlock_randomNumber_max_param0": "max",
  "dropletBlock_randomNumber_max_param0_description": "El número máximo devuelto",
  "dropletBlock_randomNumber_max_signatureOverride": "randomNumber(max)",
  "dropletBlock_randomNumber_min_max_description": "Devuelve un número aleatorio que va desde el primer número (min) hasta el segundo número (máximo), incluyendo ambos en el rango",
  "dropletBlock_randomNumber_min_max_param0": "min",
  "dropletBlock_randomNumber_min_max_param0_description": "El mínimo número devuelto",
  "dropletBlock_randomNumber_min_max_param1": "max",
  "dropletBlock_randomNumber_min_max_param1_description": "El número máximo devuelto",
  "dropletBlock_randomNumber_min_max_signatureOverride": "randomNumber (min, max)",
  "dropletBlock_return_description": "Regresa un valor de la función",
  "dropletBlock_return_signatureOverride": "volver",
  "dropletBlock_setAttribute_description": "Establece el valor dado",
  "dropletBlock_subtractOperator_description": "Resta dos numeros",
  "dropletBlock_subtractOperator_signatureOverride": "Operador de resta",
  "dropletBlock_whileBlock_description": "Crea un bucle que consta de una expresión condicional y un bloque de comandos ejecutados en cada iteración del bucle. El bucle continúa ejecutar mientras la condición se evalúa como true",
  "dropletBlock_whileBlock_signatureOverride": "bucle \"while\"",
  "emptyBlocksErrorMsg": "Los bloques \"repetir\" o \"si\" deben tener otros bloques dentro de ellos para funcionar. Asegúrate que el bloque interno quede correctamente dentro del bloque que lo contiene.",
  "emptyBlockInFunction": "The function {name} has an unfilled input.",
  "emptyBlockInVariable": "The variable {name} has an unfilled input.",
  "emptyFunctionBlocksErrorMsg": "El bloque de función necesita tener otros bloques en su interior para funcionar.",
  "emptyFunctionalBlock": "Tienes un bloque con una entrada vacía.",
  "emptyTopLevelBlock": "There are no blocks to run. You must attach a block to the {topLevelBlockName} block.",
  "end": "fin",
  "errorEmptyFunctionBlockModal": "Deben haber bloques dentro de tu definición de función. Haga clic en Editar y arrastre bloques dentro del bloque verde.",
  "errorIncompleteBlockInFunction": "Haga clic en \"Editar\" para asegurarse de que no tienes ningún bloque desaparecido dentro de su definición de función.",
  "errorParamInputUnattached": "Recuerda adjuntar un bloque a cada parámetro de entrada en el bloque función en tu espacio de trabajo.",
  "errorQuestionMarksInNumberField": "Intenta reemplazar \"???\" con un valor.",
  "errorRequiredParamsMissing": "Crea un parámetro para tu función haciendo clic en Editar y añadiendo los parámetros necesarios. Arrastra los nuevos bloques parámetro a la definición de tu función.",
  "errorUnusedFunction": "Has creado una función pero nunca la has usado en tu espacio de trabajo. Haz clic en Funciones en la caja de herramientas y asegúrate que la usas en tu programa.",
  "errorUnusedParam": "Añadiste un bloque parámetro pero no lo usaste en la definición. Asegúrate de que usas tu parámetro haciendo clic en Editar y situando el bloque parámetro dentro del bloque verde.",
  "extraTopBlocks": "Tienes bloques con entradas vacías.",
  "extraTopBlocksWhenRun": "Tienes bloques sin ataduras. ¿Quisiste decir fijar éstos al bloque \"cuando ejecuta\"?",
  "finalStage": "¡Felicidades! Has completado la etapa final.",
  "finalStageTrophies": "¡Felicidades! Has completado la etapa final y ganaste  {numTrophies, plural, one {un trofeo} other {# trofeos}}.",
  "finish": "Terminar",
  "generatedCodeInfo": "Incluso las mejores universidades enseñan programación basada en bloques (por ejemplo, {berkeleyLink}, {harvardLink}). Pero, por debajo, los bloques que has programado también se pueden mostrar en JavaScript, el lenguaje de programación más utilizado en el mundo:",
  "genericFeedback": "Mira como terminaste, y trata de reparar tu programa.",
  "hashError": "Lo sentimos, '%1' no se corresponde con ningún programa guardado.",
  "help": "Ayuda",
  "hideToolbox": "(Ocultar)",
  "hintHeader": "Aquí hay un consejo:",
  "hintRequest": "Ver pista",
  "hintTitle": "Sugerencia:",
  "infinity": "Infinito",
  "jump": "salta",
  "keepPlaying": "Seguir jugando",
  "levelIncompleteError": "Estás utilizando todos los tipos necesarios de bloques pero no de la manera correcta.",
  "listVariable": "lista",
  "makeYourOwnFlappy": "Crea tu propio juego Flappy Bird",
  "missingBlocksErrorMsg": "Trata de resolver este puzzle usando uno o más de los bloques de abajo.",
  "nextLevel": "Congratulations! You have completed this puzzle.",
  "nextLevelTrophies": "¡Felicidades! Completaste el puzzle {puzzleNumber} y ganaste {numTrophies, plural, one {un trofeo} other {# trofeos}}.",
  "nextPuzzle": "Siguiente problema",
  "nextStage": "¡ Felicidades! Completaste {stageName}.",
  "nextStageTrophies": "¡Felicidades! Completaste la etapa {stageName} y ganaste {numTrophies, plural, one {a trophy} other {# trophies}}.",
  "numBlocksNeeded": "This puzzle can be solved with %1 blocks.",
  "numLinesOfCodeWritten": "¡Acabas de escribir {numLines, plural, one {una línea} other {# líneas}} de código!",
  "openWorkspace": "Cómo funciona",
  "orientationLock": "Desactiva el bloqueo de orientación en la configuración del dispositivo.",
  "play": "jugar",
  "print": "Imprimir",
  "puzzleTitle": "Puzzle {puzzle_number} de {stage_total}",
  "repeat": "repetir",
  "resetProgram": "Reiniciar",
  "rotateText": "Gira tu dispositivo.",
  "runProgram": "Ejecutar",
  "runTooltip": "Ejecuta el programa definido por los bloques del espacio de trabajo.",
  "saveToGallery": "Guardar en la Galería",
  "savedToGallery": "¡Guardado en la Galería!",
  "score": "puntuación",
  "shareFailure": "Perdón, no podemos compartir este programa.",
  "showBlocksHeader": "Mostrar bloques",
  "showCodeHeader": "Mostrar el código",
  "showGeneratedCode": "Mostrar el código",
  "showTextHeader": "Mostrar texto",
  "showToolbox": "Mostrar el cuadro de herramientas",
  "signup": "Únete al curso de introducción",
  "stringEquals": "cadena =?",
  "subtitle": "un entorno de programación visual",
  "textVariable": "texto",
  "toggleBlocksErrorMsg": "Tienes que corregir un error en tu programa antes de que se pueda mostrar como bloques.",
  "tooFewBlocksMsg": "Estás utilizando todos los tipos necesarios de bloques, pero trata de usar más de estos tipos de bloques para completar este puzzle.",
  "tooManyBlocksMsg": "Puedes resolver este puzzle con <x id='START_SPAN'/><x id='END_SPAN'/> bloques.",
  "tooMuchWork": "¡Me has hecho trabajar mucho!  ¿Podrías tratar de repetir menos veces?",
  "toolboxHeader": "bloques",
  "toolboxHeaderDroplet": "Caja de Herramientas",
  "totalNumLinesOfCodeWritten": "Total: {numLines, plural, one {1 línea} other {# lineas}} de código.",
  "tryAgain": "Vuelve a intentarlo",
  "tryHOC": "Prueba la Hora del Código",
  "wantToLearn": "¿Quieres aprender a programar?",
  "watchVideo": "Mira el Video",
  "when": "cuando",
  "whenRun": "cuando se ejecuta",
  "workspaceHeaderShort": "Espacio de trabajo: ",
  "yes": "Yes",
  "viewData": "View Data",
  "stepOut": "Step out",
  "stepOver": "Step over",
  "stepIn": "Step in",
  "shareGame": "Share your app:",
  "shareApplabTwitter": "Check out the app I made. I wrote it myself with @codeorg",
  "repeatForeverTooltip": "Execute the actions in this block repeatedly while the app is running.",
  "repeatDo": "do",
  "repeatForever": "repeat forever",
  "reinfFeedbackMsg": "You can press the \"Try again\" button to go back to running your app.",
  "pause": "Break",
  "no": "No",
  "manageAssets": "Click to view or update your images and sounds.",
  "finalLevel": "Congratulations! You have solved the final puzzle.",
  "dropletBlock_write_param0_description": "The text or HTML you want appended to the bottom of your application",
  "dropletBlock_write_param0": "text",
  "dropletBlock_write_description": "Appends the specified text to the bottom of the document. The text can also be formatted as HTML.",
  "dropletBlock_updateRecord_param2": "callbackFunction",
  "dropletBlock_updateRecord_param1": "record",
  "dropletBlock_updateRecord_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_updateRecord_param0": "tableName",
  "dropletBlock_updateRecord_description": "Using App Lab's table data storage, updates the provided record in tableName. record must be uniquely identified with its id field. When the call is completed, the callbackFunction is called",
  "dropletBlock_turnTo_param0_description": "The new angle to set the turtle's direction to.",
  "dropletBlock_turnTo_param0": "angle",
  "dropletBlock_turnTo_description": "Changes the turtle's direction to a specific angle. 0 is up, 90 is right, 180 is down, and 270 is left",
  "dropletBlock_turnRight_param0_description": "The angle to turn right.",
  "dropletBlock_turnRight_param0": "angle",
  "dropletBlock_turnRight_description": "Changes the turtle's direction to the right by the specified angle in degrees",
  "dropletBlock_turnLeft_param0_description": "The angle to turn left.",
  "dropletBlock_turnLeft_param0": "angle",
  "dropletBlock_turnLeft_description": "Changes the turtle's direction to the left by the specified angle in degrees",
  "dropletBlock_toUpperCase_signatureOverride": "[string].toUpperCase()",
  "dropletBlock_toUpperCase_description": "Converts the original string to use all uppercase letters and returns it as a new string",
  "dropletBlock_toLowerCase_signatureOverride": "[string].toLowerCase()",
  "dropletBlock_toLowerCase_description": "Converts the original string to use all lowercase letters and returns it as a new string",
  "dropletBlock_textLabel_param2_description": "The id to associate the label with. Clicking the label is the same as clicking on the control.",
  "dropletBlock_textLabel_param2": "forId",
  "dropletBlock_textLabel_param1_description": "The value to display for the label.",
  "dropletBlock_textLabel_param1": "text",
  "dropletBlock_textLabel_param0_description": "A unique identifier for the label control. The id is used for referencing the created label. For example, to assign event handlers.",
  "dropletBlock_textLabel_param0": "labelId",
  "dropletBlock_textLabel_description": "Creates and displays a text label. The text label is used to display a description for the following input controls: radio buttons, check boxes, text inputs, and dropdown lists",
  "dropletBlock_textInput_param1": "text",
  "dropletBlock_textInput_param0": "inputId",
  "dropletBlock_textInput_description": "Create a text input and assign it an element id",
  "dropletBlock_substring_signatureOverride": "[string].substring(start, end)",
  "dropletBlock_substring_param1_description": "The position (up to, but not including) to stop the extraction.",
  "dropletBlock_substring_param1": "end",
  "dropletBlock_substring_param0_description": "The position to start the extraction.",
  "dropletBlock_substring_param0": "start",
  "dropletBlock_substring_description": "Returns a string extracted between the start and end positions of the original string",
  "dropletBlock_startWebRequest_param1_description": "A function to execute.",
  "dropletBlock_startWebRequest_param1": "function",
  "dropletBlock_startWebRequest_param0_description": "The web address of a service that returns data.",
  "dropletBlock_startWebRequest_param0": "url",
  "dropletBlock_startWebRequest_description": "Request data from the internet and execute code when the request is complete",
  "dropletBlock_speed_param0_description": "The speed of the app's execution in the range of (1-100)",
  "dropletBlock_speed_param0": "value",
  "dropletBlock_speed_description": "Sets the speed for the entire app's execution (which includes the turtle's speed). Expects a number from 1 - 100.",
  "dropletBlock_show_description": "Shows the turtle on the screen, by making it visible at its current location",
  "dropletBlock_showElement_param0_description": "The id of the element to hide.",
  "dropletBlock_showElement_param0": "id",
  "dropletBlock_showElement_description": "Shows the element with the provided id",
  "dropletBlock_setTimeout_param1_description": "The number of milliseconds to wait before executing the function.",
  "dropletBlock_setTimeout_param1": "milliseconds",
  "dropletBlock_setTimeout_param0_description": "A function to execute.",
  "dropletBlock_setTimeout_param0": "function",
  "dropletBlock_setTimeout_description": "Set a timer and execute code when that number of milliseconds has elapsed",
  "dropletBlock_setText_param1": "text",
  "dropletBlock_setText_param0": "id",
  "dropletBlock_setText_description": "Set the text for the specified element",
  "dropletBlock_setStyle_description": "Add CSS style text to an element",
  "dropletBlock_setStrokeWidth_param0_description": "The width in pixels with which to draw lines, circles, and rectangles.",
  "dropletBlock_setStrokeWidth_param0": "width",
  "dropletBlock_setStrokeWidth_description": "Set the line width for the active canvas",
  "dropletBlock_setStrokeColor_param0_description": "The color name or hex value representing the color.",
  "dropletBlock_setStrokeColor_param0": "color",
  "dropletBlock_setStrokeColor_description": "Set the stroke color for the active canvas",
  "dropletBlock_setScreen_param0": "screenId",
  "dropletBlock_setScreen_description": "Sets the screen to the given screenId",
  "dropletBlock_setRed_param3_description": "The amount of red (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRed_param3": "redValue",
  "dropletBlock_setRed_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRed_param2": "y",
  "dropletBlock_setRed_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRed_param1": "x",
  "dropletBlock_setRed_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setRed_param0": "imageData",
  "dropletBlock_setRed_description": "Sets the amount of red (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data to the redValue input amount.",
  "dropletBlock_setRGB_param6_description": "Optional. The amount of opacity (from 0 to 255) to set in the pixel. Defaults to 255 (full opacity).",
  "dropletBlock_setRGB_param6": "alpha",
  "dropletBlock_setRGB_param5_description": "The amount of blue (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param5": "blue",
  "dropletBlock_setRGB_param4_description": "The amount of green (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param4": "green",
  "dropletBlock_setRGB_param3_description": "The amount of red (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param3": "red",
  "dropletBlock_setRGB_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRGB_param2": "y",
  "dropletBlock_setRGB_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRGB_param1": "x",
  "dropletBlock_setRGB_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setRGB_param0": "imageData",
  "dropletBlock_setRGB_description": "Sets the RGB color values (ranging from 0 to 255) of the pixel located at the given x and y position in the given image data to the input red, green, blue amounts",
  "dropletBlock_setPosition_param4": "height",
  "dropletBlock_setPosition_param3": "width",
  "dropletBlock_setPosition_param2": "y",
  "dropletBlock_setPosition_param1": "x",
  "dropletBlock_setPosition_param0": "id",
  "dropletBlock_setPosition_description": "Position an element with x, y, width, and height coordinates",
  "dropletBlock_setParent_description": "Set an element to become a child of a parent element",
  "dropletBlock_setKeyValue_param2_description": "A function that is asynchronously called when the call to setKeyValue is finished.",
  "dropletBlock_setKeyValue_param2": "callbackFunction",
  "dropletBlock_setKeyValue_param1_description": "The data to be stored.",
  "dropletBlock_setKeyValue_param1": "value",
  "dropletBlock_setKeyValue_param0_description": "The name of the key to be stored.",
  "dropletBlock_setKeyValue_param0": "key",
  "dropletBlock_setKeyValue_description": "Stores a key/value pair in App Lab's key/value data storage, and calls the callbackFunction when the action is finished.",
  "dropletBlock_setInterval_param1_description": "The number of milliseconds between each execution of the function.",
  "dropletBlock_setInterval_param1": "milliseconds",
  "dropletBlock_setInterval_param0_description": "A function to execute.",
  "dropletBlock_setInterval_param0": "function",
  "dropletBlock_setInterval_description": "Execute the callback function code every time a certain number of milliseconds has elapsed, until canceled",
  "dropletBlock_setImageURL_param1_description": "TThe source URL of the image to be displayed on screen.",
  "dropletBlock_setImageURL_param1": "url",
  "dropletBlock_setImageURL_param0_description": "The id of the image element.",
  "dropletBlock_setImageURL_param0": "id",
  "dropletBlock_setImageURL_description": "Sets the URL for the provided image element id",
  "dropletBlock_setGreen_param3_description": "The amount of green (from 0 to 255) to set in the pixel.",
  "dropletBlock_setGreen_param3": "greenValue",
  "dropletBlock_setGreen_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setGreen_param2": "y",
  "dropletBlock_setGreen_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setGreen_param1": "x",
  "dropletBlock_setGreen_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setGreen_param0": "imageData",
  "dropletBlock_setGreen_description": "Sets the amount of green (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data to the greenValue input amount.",
  "dropletBlock_setFillColor_param0_description": "The color name or hex value representing the color.",
  "dropletBlock_setFillColor_param0": "color",
  "dropletBlock_setFillColor_description": "Set the fill color for the active canvas",
  "dropletBlock_setChecked_param1": "checked",
  "dropletBlock_setChecked_param0": "id",
  "dropletBlock_setChecked_description": "Set the state of a checkbox or radio button",
  "dropletBlock_setBlue_param3_description": "The amount of blue (from 0 to 255) to set in the pixel.",
  "dropletBlock_setBlue_param3": "blueValue",
  "dropletBlock_setBlue_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setBlue_param2": "y",
  "dropletBlock_setBlue_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setBlue_param1": "x",
  "dropletBlock_setBlue_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setBlue_param0": "imageData",
  "dropletBlock_setBlue_description": "Sets the amount of blue (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data to the blueValue input amount.",
  "dropletBlock_setAlpha_param3_description": "The amount of alpha (opacity) (from 0 to 255) to set in the pixel.",
  "dropletBlock_setAlpha_param3": "alphaValue",
  "dropletBlock_setAlpha_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setAlpha_param2": "y",
  "dropletBlock_setAlpha_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setAlpha_param1": "x",
  "dropletBlock_setAlpha_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setAlpha_param0": "imageData",
  "dropletBlock_setAlpha_description": "Sets the amount of alpha (opacity) (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data",
  "dropletBlock_setActiveCanvas_param0_description": "The id of the canvas element to activate.",
  "dropletBlock_setActiveCanvas_param0": "canvasId",
  "dropletBlock_setActiveCanvas_description": "Change the active canvas to the canvas with the specified id (other canvas commands only affect the active canvas)",
  "dropletBlock_removeItem_param1_description": "The position of the item to remove from the array.",
  "dropletBlock_removeItem_param1": "index",
  "dropletBlock_removeItem_param0_description": "The array to be modified.",
  "dropletBlock_removeItem_param0": "list",
  "dropletBlock_removeItem_description": "Remove the item at the specified position from the array",
  "dropletBlock_rect_param3_description": "The vertical height in pixels of the rectangle.",
  "dropletBlock_rect_param3": "height",
  "dropletBlock_rect_param2_description": "The horizontal width in pixels of the rectangle.",
  "dropletBlock_rect_param2": "width",
  "dropletBlock_rect_param1_description": "The y position in pixels of the upper left corner of the rectangle.",
  "dropletBlock_rect_param1": "upperLeftY",
  "dropletBlock_rect_param0_description": "The x position in pixels of the upper left corner of the rectangle.",
  "dropletBlock_rect_param0": "upperLeftX",
  "dropletBlock_rect_description": "Draws a rectangle onto the active canvas positioned at upperLeftX and upperLeftY, and size width and height.",
  "dropletBlock_readRecords_param2": "callbackFunction",
  "dropletBlock_readRecords_param1": "searchTerms",
  "dropletBlock_readRecords_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_readRecords_param0": "tableName",
  "dropletBlock_readRecords_description": "Using App Lab's table data storage, reads the records from the provided tableName that match the searchTerms. When the call is completed, the callbackFunction is called and is passed the array of records.",
  "dropletBlock_radioButton_param2_description": "The group that the radio button is associated with. Only one button in a group can be checked at a time.",
  "dropletBlock_radioButton_param2": "group",
  "dropletBlock_radioButton_param1_description": "Whether the radio button is initially checked.",
  "dropletBlock_radioButton_param1": "checked",
  "dropletBlock_radioButton_param0_description": "A unique identifier for the radio button. The id is used for referencing the radioButton control. For example, to assign event handlers.",
  "dropletBlock_radioButton_param0": "id",
  "dropletBlock_radioButton_description": "Creates a radio button and assigns it to a group for choosing from a predefined set of options. Only one radio button in a group can be selected at a time",
  "dropletBlock_putImageData_param2_description": "The y position in pixels starting from the upper left corner of image to place the data on the canvas.",
  "dropletBlock_putImageData_param2": "startY",
  "dropletBlock_putImageData_param1_description": "The x position in pixels starting from the upper left corner of image to place the data on the canvas.",
  "dropletBlock_putImageData_param1": "startX",
  "dropletBlock_putImageData_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_putImageData_param0": "imageData",
  "dropletBlock_putImageData_description": "Puts the input image data onto the current canvas element starting at position startX, startY",
  "dropletBlock_playSound_param0": "url",
  "dropletBlock_playSound_description": "Play the MP3, OGG, or WAV sound file from the specified URL",
  "dropletBlock_penWidth_param0_description": "The diameter of the circles drawn behind the turtle as it moves",
  "dropletBlock_penWidth_param0": "width",
  "dropletBlock_penWidth_description": "Changes the diameter of the circles drawn behind the turtle as it moves",
  "dropletBlock_penUp_description": "Stops the turtle from drawing a line behind it as it moves",
  "dropletBlock_penRGB_param2_description": "The amount of blue (ranging from 0 to 255) to set for the pen color",
  "dropletBlock_penRGB_param2": "blue",
  "dropletBlock_penRGB_param1_description": "The amount of green (ranging from 0 to 255) to set for the pen color",
  "dropletBlock_penRGB_param1": "green",
  "dropletBlock_penRGB_param0_description": "The amount of red (ranging from 0 to 255) to set for the pen color",
  "dropletBlock_penRGB_param0": "red",
  "dropletBlock_penRGB_description": "Sets the color of the line drawn behind the turtle as it moves to the specified RGB values",
  "dropletBlock_penDown_description": "Causes a line to be drawn behind the turtle as it moves",
  "dropletBlock_penColor_param0_description": "The color of the line left behind the turtle as it moves",
  "dropletBlock_penColor_param0": "color",
  "dropletBlock_penColor_description": "Sets the color of the line drawn behind the turtle as it moves",
  "dropletBlock_onEvent_param2_description": "A function to execute.",
  "dropletBlock_onEvent_param2": "callbackFunction",
  "dropletBlock_onEvent_param1_description": "The type of event to respond to.",
  "dropletBlock_onEvent_param1": "type",
  "dropletBlock_onEvent_param0_description": "The ID of the UI control to which this function applies.",
  "dropletBlock_onEvent_param0": "id",
  "dropletBlock_onEvent_description": "Execute the callbackFunction code when a specific event type occurs for the specified element",
  "dropletBlock_move_param1_description": "The number of pixels to move the turtle down.",
  "dropletBlock_move_param1": "y",
  "dropletBlock_move_param0_description": "The number of pixels to move the turtle right.",
  "dropletBlock_move_param0": "x",
  "dropletBlock_move_description": "Moves the turtle from its current location. Adds x to the turtle's x position and y to the turtle's y position",
  "dropletBlock_moveTo_param1_description": "The y coordinate on the screen to move the turtle.",
  "dropletBlock_moveTo_param1": "y",
  "dropletBlock_moveTo_param0_description": "The x coordinate on the screen to move the turtle.",
  "dropletBlock_moveTo_param0": "x",
  "dropletBlock_moveTo_description": "Moves the turtle to a specific x,y coordinate on the screen",
  "dropletBlock_moveForward_param0_description": "The number of pixels to move the turtle forward in its current direction. If not provided, the turtle will move forward 25 pixels",
  "dropletBlock_moveForward_param0": "pixels",
  "dropletBlock_moveForward_description": "Moves the turtle forward a given number of pixels in its current direction",
  "dropletBlock_moveBackward_param0_description": "The number of pixels to move the turtle back in its current direction. If not provided, the turtle will move back 25 pixels",
  "dropletBlock_moveBackward_param0": "pixels",
  "dropletBlock_moveBackward_description": "Moves the turtle back a given number of pixels in its current direction",
  "dropletBlock_listLength_signatureOverride": "[list].length",
  "dropletBlock_listLength_description": "The length of the array",
  "dropletBlock_line_param3_description": "The y position in pixels of the end of the line.",
  "dropletBlock_line_param3": "y2",
  "dropletBlock_line_param2_description": "The x position in pixels of the end of the line.",
  "dropletBlock_line_param2": "x2",
  "dropletBlock_line_param1_description": "The y position in pixels of the beginning of the line.",
  "dropletBlock_line_param1": "y1",
  "dropletBlock_line_param0_description": "The x position in pixels of the beginning of the line.",
  "dropletBlock_line_param0": "x1",
  "dropletBlock_line_description": "Draws a line on the active canvas from x1, y1 to x2, y2.",
  "dropletBlock_length_signatureOverride": "[string].length",
  "dropletBlock_length_description": "The length of the string",
  "dropletBlock_insertItem_param2_description": "The item to insert into the array.",
  "dropletBlock_insertItem_param2": "item",
  "dropletBlock_insertItem_param1_description": "The position to insert the item into the array.",
  "dropletBlock_insertItem_param1": "index",
  "dropletBlock_insertItem_param0_description": "The array to be modified.",
  "dropletBlock_insertItem_param0": "list",
  "dropletBlock_insertItem_description": "Insert the item into the array at the specified position",
  "dropletBlock_innerHTML_description": "Set the inner HTML for the element with the specified id",
  "dropletBlock_indexOf_signatureOverride": "[string].indexOf(searchValue)",
  "dropletBlock_indexOf_param0_description": "The string to search for.",
  "dropletBlock_indexOf_param0": "searchValue",
  "dropletBlock_indexOf_description": "Returns the position of the first occurrence of searchValue within the string",
  "dropletBlock_image_param1_description": "The source URL of the image to be displayed on screen.",
  "dropletBlock_image_param1": "url",
  "dropletBlock_image_param0_description": "The id of the image element.",
  "dropletBlock_image_param0": "id",
  "dropletBlock_image_description": "Displays the image from the provided url on the screen",
  "dropletBlock_imageUploadButton_description": "Create an image upload button and assign it an element id",
  "dropletBlock_hide_description": "Hides the turtle so it is not shown on the screen",
  "dropletBlock_hideElement_param0_description": "The id of the element to hide.",
  "dropletBlock_hideElement_param0": "id",
  "dropletBlock_hideElement_description": "Hides the element with the provided id so it is not shown on the screen",
  "dropletBlock_getY_description": "Gets the current y coordinate in pixels of the turtle",
  "dropletBlock_getYPosition_param0": "id",
  "dropletBlock_getYPosition_description": "Get the element's y position",
  "dropletBlock_getX_description": "Gets the current x coordinate in pixels of the turtle",
  "dropletBlock_getXPosition_param0": "id",
  "dropletBlock_getXPosition_description": "Get the element's x position",
  "dropletBlock_getUserId_description": "Gets a unique identifier for the current user of this app",
  "dropletBlock_getText_param0": "id",
  "dropletBlock_getText_description": "Get the text from the specified element",
  "dropletBlock_getRed_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getRed_param2": "y",
  "dropletBlock_getRed_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getRed_param1": "x",
  "dropletBlock_getRed_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getRed_param0": "imageData",
  "dropletBlock_getRed_description": "Gets the amount of red (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data",
  "dropletBlock_getKeyValue_param1": "callbackFunction",
  "dropletBlock_getKeyValue_param0_description": "The name of the key to be retrieved.",
  "dropletBlock_getKeyValue_param0": "key",
  "dropletBlock_getKeyValue_description": "Retrieves the value stored at the provided key name in App Lab's key/value data storage. The value is returned as a parameter to callbackFunction when the retrieval is finished",
  "dropletBlock_getImageURL_param0_description": "The id of the image element.",
  "dropletBlock_getImageURL_param0": "imageId",
  "dropletBlock_getImageURL_description": "Get the URL for the provided image element id",
  "dropletBlock_getImageData_param3_description": "The y position in pixels starting from the upper left corner of image to end the capture.",
  "dropletBlock_getImageData_param3": "endY",
  "dropletBlock_getImageData_param2_description": "The x position in pixels starting from the upper left corner of image to end the capture.",
  "dropletBlock_getImageData_param2": "endX",
  "dropletBlock_getImageData_param1_description": "The y position in pixels starting from the upper left corner of image to start the capture.",
  "dropletBlock_getImageData_param1": "startY",
  "dropletBlock_getImageData_param0_description": "The x position in pixels starting from the upper left corner of image to start the capture.",
  "dropletBlock_getImageData_param0": "startX",
  "dropletBlock_getImageData_description": "Returns an object representing the image data captured from the canvas in the coordinate range from startX, startY to endX, endY",
  "dropletBlock_getGreen_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getGreen_param2": "y",
  "dropletBlock_getGreen_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getGreen_param1": "x",
  "dropletBlock_getGreen_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getGreen_param0": "imageData",
  "dropletBlock_getGreen_description": "Gets the amount of green (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data",
  "dropletBlock_getDirection_description": "Returns the current direction that the turtle is facing. 0 degrees is pointing up",
  "dropletBlock_getChecked_param0": "id",
  "dropletBlock_getChecked_description": "Get the state of a checkbox or radio button",
  "dropletBlock_getBlue_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getBlue_param2": "y",
  "dropletBlock_getBlue_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getBlue_param1": "x",
  "dropletBlock_getBlue_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getBlue_param0": "imageData",
  "dropletBlock_getBlue_description": "Gets the amount of blue (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data",
  "dropletBlock_getAttribute_description": "Gets the given attribute",
  "dropletBlock_getAlpha_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getAlpha_param2": "y",
  "dropletBlock_getAlpha_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getAlpha_param1": "x",
  "dropletBlock_getAlpha_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getAlpha_param0": "imageData",
  "dropletBlock_getAlpha_description": "Returns the amount of alpha (opacity) (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data",
  "dropletBlock_dropdown_signatureOverride": "dropdown(dropdownID, option1, option2, ..., optionX)",
  "dropletBlock_dropdown_description": "Create a dropdown, assign it an element id, and populate it with a list of items",
  "dropletBlock_drawImage_param4": "height",
  "dropletBlock_drawImage_param3": "width",
  "dropletBlock_drawImage_param2_description": "The y position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param2": "y",
  "dropletBlock_drawImage_param1_description": "The x position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param1": "x",
  "dropletBlock_drawImage_param0_description": "The x position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param0": "id",
  "dropletBlock_drawImage_description": "Draws the specified image or canvas element onto the active canvas at the specified position, and optionally scales the element to the specified width and height",
  "dropletBlock_dot_param0_description": "The radius of the dot to draw",
  "dropletBlock_dot_param0": "radius",
  "dropletBlock_dot_description": "Draws a dot in the turtle's location with the specified radius",
  "dropletBlock_deleteRecord_param2_description": "A function that is asynchronously called when the call to deleteRecord() is finished.",
  "dropletBlock_deleteRecord_param2": "callbackFunction",
  "dropletBlock_deleteRecord_param1": "record",
  "dropletBlock_deleteRecord_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_deleteRecord_param0": "tableName",
  "dropletBlock_deleteRecord_description": "Using App Lab's table data storage, deletes the provided record in tableName. record is an object that must be uniquely identified with its id field. When the call is completed, the callbackFunction is called.",
  "dropletBlock_deleteElement_param0_description": "The id of the element to delete.",
  "dropletBlock_deleteElement_param0": "id",
  "dropletBlock_deleteElement_description": "Delete the element with the specified id",
  "dropletBlock_declareAssign_str_hello_world_signatureOverride": "Declare and assign a string to a variable",
  "dropletBlock_declareAssign_str_hello_world_description": "Declare a variable and assign a string to it",
  "dropletBlock_declareAssign_list_abd_signatureOverride": "Declare and assign an array to a variable",
  "dropletBlock_declareAssign_list_abd_description": "Declare a variable and assigns an array to it with the given initial values",
  "dropletBlock_createRecord_param2": "callbackFunction",
  "dropletBlock_createRecord_param1": "record",
  "dropletBlock_createRecord_param0_description": "The name of the table the record should be added to. `tableName` gets created if it doesn't exist.",
  "dropletBlock_createRecord_param0": "tableName",
  "dropletBlock_createRecord_description": "Using App Lab's table data storage, creates a record with a unique id in the table name provided, and calls the callbackFunction when the action is finished.",
  "dropletBlock_createCanvas_param2_description": "The vertical height in pixels of the rectangle.",
  "dropletBlock_createCanvas_param2": "height",
  "dropletBlock_createCanvas_param1_description": "The horizontal width in pixels of the rectangle.",
  "dropletBlock_createCanvas_param1": "width",
  "dropletBlock_createCanvas_param0_description": "The id of the new canvas element.",
  "dropletBlock_createCanvas_param0": "canvasId",
  "dropletBlock_createCanvas_description": "Create a canvas with the specified id, and optionally set width and height dimensions",
  "dropletBlock_container_description": "Create a division container with the specified element id, and optionally set its inner HTML",
  "dropletBlock_console.log_param0_description": "The message string to display in the console.",
  "dropletBlock_console.log_param0": "message",
  "dropletBlock_console.log_description": "Displays the string or variable in the console display",
  "dropletBlock_clearTimeout_param0_description": "The value returned by the setTimeout function to cancel.",
  "dropletBlock_clearTimeout_param0": "timeout",
  "dropletBlock_clearTimeout_description": "Clear an existing timer by passing in the value returned from setTimeout()",
  "dropletBlock_clearInterval_param0_description": "The value returned by the setInterval function to clear.",
  "dropletBlock_clearInterval_param0": "interval",
  "dropletBlock_clearInterval_description": "Clear an existing interval timer by passing in the value returned from setInterval()",
  "dropletBlock_clearCanvas_description": "Clear all data on the active canvas",
  "dropletBlock_circle_param2_description": "The radius of the circle, in pixels.",
  "dropletBlock_circle_param2": "radius",
  "dropletBlock_circle_param1_description": "The y position in pixels of the center of the circle.",
  "dropletBlock_circle_param1": "centerY",
  "dropletBlock_circle_param0_description": "The x position in pixels of the center of the circle.",
  "dropletBlock_circle_param0": "centerX",
  "dropletBlock_circle_description": "Draw a circle on the active  canvas with the specified coordinates for center (x, y) and radius",
  "dropletBlock_checkbox_param1": "checked",
  "dropletBlock_checkbox_param0": "checkboxId",
  "dropletBlock_checkbox_description": "Create a checkbox and assign it an element id",
  "dropletBlock_button_param1_description": "The text displayed within the button.",
  "dropletBlock_button_param1": "text",
  "dropletBlock_button_param0_description": "A unique identifier for the button. The id is used for referencing the created button. For example, to assign event handlers.",
  "dropletBlock_button_param0": "buttonId",
  "dropletBlock_button_description": "Creates a button that you can click on. The button will display the text provided and can be referenced by the given id",
  "dropletBlock_arcRight_param1_description": "The radius of the circle that is placed right of the turtle. Must be >= 0.",
  "dropletBlock_arcRight_param1": "radius",
  "dropletBlock_arcRight_param0_description": "The angle along the circle to move.",
  "dropletBlock_arcRight_param0": "angle",
  "dropletBlock_arcRight_description": "Moves the turtle forward and to the right in a smooth circular arc",
  "dropletBlock_arcLeft_param1_description": "The radius of the circle that is placed left of the turtle. Must be >= 0.",
  "dropletBlock_arcLeft_param1": "radius",
  "dropletBlock_arcLeft_param0_description": "The angle along the circle to move.",
  "dropletBlock_arcLeft_param0": "angle",
  "dropletBlock_arcLeft_description": "Moves the turtle forward and to the left in a smooth circular arc",
  "dropletBlock_appendItem_param1_description": "The item to add to the end of the array.",
  "dropletBlock_appendItem_param1": "item",
  "dropletBlock_appendItem_param0_description": "The array to be modified.",
  "dropletBlock_appendItem_param0": "list",
  "dropletBlock_appendItem_description": "Append the item to the end of the array",
  "designWorkspaceHeader": "Workspace",
  "designWorkspaceDescription": "Click on an element to edit its properties. Create code in Events.",
  "designToolboxHeader": "Design Toolbox",
  "designToolboxDescription": "Drag the elements into your app!",
  "debugConsoleHeader": "Debug Console",
  "debugCommandsHeaderWhenClosed": "Show Debug Commands",
  "debugCommandsHeaderWhenOpen": "Debug Commands",
  "containerTooltip": "Creates a division container and sets its inner HTML.",
  "container": "create container",
  "catEvents": "Events",
  "catControl": "Loops",
  "addEventHeader": "Click a link below to add a function to your code that will be called when the event is triggered."
}
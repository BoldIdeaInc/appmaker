{
  "and": "и",
  "animationMode": "Анимация",
  "backToPreviousLevel": "Обратно към предишното ниво",
  "blocklyMessage": "Blockly",
  "blocks": "блокове",
  "booleanFalse": "грешно",
  "booleanTrue": "вярно",
  "catActions": "Actions",
  "catColour": "Цвят",
  "catLists": "Списъци",
  "catLogic": "Logic",
  "catLoops": "Цикли",
  "catMath": "Math",
  "catProcedures": "Functions",
  "catText": "Text",
  "catVariables": "Variables",
  "choosePrefix": "Изберете...",
  "clearPuzzle": "Стартиране отначало",
  "clearPuzzleConfirm": "Това ще рестартира пъзела в начално състояние и ще изтрие всички блокове, които сте добавили или променили.",
  "clearPuzzleConfirmHeader": "Наистина ли искате да започнете отначало?",
  "codeMode": "Код",
  "codeTooltip": "Виж генерирания JavaScript код.",
  "completedWithoutRecommendedBlock": "Поздравления! Вие завършихте пъзел {puzzleNumber}. (Но можехте да използвате различни блокове за по-силен код.)",
  "continue": "Продължи",
  "copy": "Копиране",
  "debugConsoleHeader": "Debug Console",
  "debugCommandsHeaderWhenOpen": "Debug Commands",
  "debugCommandsHeaderWhenClosed": "Show Debug Commands",
  "debugWatchHeader": "Гледай",
  "debugWatchNotAvailable": "Не е налично",
  "defaultTwitterText": "Вижте какво направих",
  "designMode": "Дизайн",
  "dialogCancel": "Отмени",
  "dialogOK": "OK",
  "directionEastLetter": "И",
  "directionNorthLetter": "С",
  "directionSouthLetter": "Ю",
  "directionWestLetter": "З",
  "dropletBlock_addOperator_description": "Добавете две числа",
  "dropletBlock_addOperator_signatureOverride": "Добавяне на оператор",
  "dropletBlock_andOperator_description": "Връща истина, само когато и двата израза са верни или грешни",
  "dropletBlock_andOperator_signatureOverride": "И оператор",
  "dropletBlock_assign_x_description": "Задава стойност на съществуваща променлива.",
  "dropletBlock_assign_x_signatureOverride": "Присвояване на променлива",
  "dropletBlock_callMyFunction_description": "Призовава по име функция, която е без параметри",
  "dropletBlock_callMyFunction_n_description": "Извиква функция, която взима един или повече параметри",
  "dropletBlock_callMyFunction_n_signatureOverride": "Призовава функция с параметри",
  "dropletBlock_callMyFunction_signatureOverride": "Призовава функция",
  "dropletBlock_comment_description": "Напишете описание на някакъв код",
  "dropletBlock_comment_signatureOverride": "коментар",
  "dropletBlock_declareAssign_x_array_1_4_description": "Декларира променлива и я възлага на масив с първоначалните стойности",
  "dropletBlock_declareAssign_x_array_1_4_signatureOverride": "Декларира променлива, зададена на масив",
  "dropletBlock_declareAssign_x_description": "Декларира променлива с даденото име след \"var\" и го задава на стойността от дясната страна на израза",
  "dropletBlock_declareAssign_x_signatureOverride": "Декларира променлива",
  "dropletBlock_declareAssign_x_prompt_description": "Декларира, че кодът ще използва променлива и ѝ присвоява първоначална стойност, предоставена от потребителя",
  "dropletBlock_declareAssign_x_prompt_signatureOverride": "Питай потребителя за стойност и я съхрани",
  "dropletBlock_declareAssign_x_promptNum_description": "Declares that the code will now use a variable and assign it an initial numerical value provided by the user",
  "dropletBlock_declareAssign_x_promptNum_signatureOverride": "Prompt the user for a numerical value and store it",
  "dropletBlock_declareNoAssign_x_description": "Declares a variable with the given name after 'var'",
  "dropletBlock_declareNoAssign_x_signatureOverride": "Декларира променлива",
  "dropletBlock_divideOperator_description": "Разделяне на две числа",
  "dropletBlock_divideOperator_signatureOverride": "Оператор за \"делене\"",
  "dropletBlock_equalityOperator_description": "Проверява дали две стойности са равни. Връща истина, ако стойността от лявата страна на израза е равна на стойността на дясната страна, и лъжа в противен случай",
  "dropletBlock_equalityOperator_signatureOverride": "Оператор за равенство",
  "dropletBlock_forLoop_i_0_4_description": "Създава цикъл, състоящ се от израз на инициализация, условен израз, израз от цели числа и блок от отчети, изпълнен за всяко повторение в цикъла",
  "dropletBlock_forLoop_i_0_4_signatureOverride": "\"за\" цикъл",
  "dropletBlock_functionParams_n_description": "Дава име на набор от действия, задвижващи от параметър, които да изпълнява компютъра.",
  "dropletBlock_functionParams_n_signatureOverride": "Дефинира функция с параметри",
  "dropletBlock_functionParams_none_description": "Дава име на набор от действия, които искаме компютъра да изпълнява.",
  "dropletBlock_functionParams_none_signatureOverride": "Дефинира функция",
  "dropletBlock_getTime_description": "Получава текущото време в милисекунди",
  "dropletBlock_greaterThanOperator_description": "Проверява дали едно число е по-голямо от друго число. Връща true, ако стойността на лявата страна на израза е строго по-голяма от стойността на дясната страна на израза",
  "dropletBlock_greaterThanOperator_signatureOverride": "\"По-голямо\"  оператор",
  "dropletBlock_greaterThanOrEqualOperator_description": "Проверява дали една стойност е по-голяма или равна на друга стойност. Връща истина, ако стойността на лявата страна на израза е по-голяма или равна на стойността на дясната страна на израза.",
  "dropletBlock_greaterThanOrEqualOperator_signatureOverride": "\"По-голямо или равно\" оператор",
  "dropletBlock_ifBlock_description": "Изпълнява блок с отчети, ако указано условие е вярно",
  "dropletBlock_ifBlock_signatureOverride": "\"Ако\" отчет",
  "dropletBlock_ifElseBlock_description": "Изпълнява блок с отчети, ако указано условие е вярно; в противен случай блокът с отчетите се изпълнява спрямо посоченото в \"друго\" клаузата",
  "dropletBlock_ifElseBlock_signatureOverride": "ако/иначе отчет",
  "dropletBlock_inequalityOperator_description": "Проверява дали две стойности не са равни. Връща истина, ако стойността на лявата страна на израза не е равна на стойността на дясната страна на израза",
  "dropletBlock_inequalityOperator_signatureOverride": "Оператор \"неравенство\"",
  "dropletBlock_lessThanOperator_description": "Проверява дали една стойност е по-малка от друга стойност. Връща истина, ако стойността на лявата страна на израза е строго по-малка от стойността на дясната страна на израза",
  "dropletBlock_lessThanOperator_signatureOverride": "\"По-малко\" оператор",
  "dropletBlock_lessThanOrEqualOperator_description": "Проверява дали една стойност е по-малка или равна на друга стойност. Връща истина, ако стойността на лявата страна на израза е по-малка или равна на стойността на дясната част на израза.",
  "dropletBlock_lessThanOrEqualOperator_signatureOverride": "\"По-малко или равно\" оператор",
  "dropletBlock_mathAbs_description": "Взема абсолютната стойност на x",
  "dropletBlock_mathAbs_param0": "x",
  "dropletBlock_mathAbs_param0_description": "Произволно число.",
  "dropletBlock_mathAbs_signatureOverride": "Math.ABS(x)",
  "dropletBlock_mathMax_description": "Взима максималната стойност от наколко стойности на n1, n2,..., nX",
  "dropletBlock_mathMax_param0": "N1, n2,..., nX",
  "dropletBlock_mathMax_param0_description": "Едно или повече числа за сравнение.",
  "dropletBlock_mathMax_signatureOverride": "Math.Max (n1, n2,..., nX)",
  "dropletBlock_mathMin_description": "Взема минималната стойност от няколко стойности на n1, n2,..., nX",
  "dropletBlock_mathMin_param0": "N1, n2,..., nX",
  "dropletBlock_mathMin_param0_description": "Едно или повече числа за сравнение.",
  "dropletBlock_mathMin_signatureOverride": "Math.min (n1, n2,..., nX)",
  "dropletBlock_mathRandom_description": "Връща случайно число в диапазона от 0 (включително) до 1 (не се включва)",
  "dropletBlock_mathRandom_signatureOverride": "Math.Random()",
  "dropletBlock_mathRound_description": "Закръглява число до най-близкото цяло число",
  "dropletBlock_mathRound_param0": "x",
  "dropletBlock_mathRound_param0_description": "Произволно число.",
  "dropletBlock_mathRound_signatureOverride": "Math.Round(x)",
  "dropletBlock_multiplyOperator_description": "Умножаване на две числа",
  "dropletBlock_multiplyOperator_signatureOverride": "Оператор \"Умножение\"",
  "dropletBlock_notOperator_description": "Връща лъжа ако изразът може да се преобразува на true; в противен случай връща истина",
  "dropletBlock_notOperator_signatureOverride": "НЕ булев оператор",
  "dropletBlock_orOperator_description": "Връща истина, когато или израз е истина и лъжа в противен случай",
  "dropletBlock_orOperator_signatureOverride": "ИЛИ оператор",
  "dropletBlock_randomNumber_description": "Връща случайно число в затворен диапазона от минималната до максималната стойност.",
  "dropletBlock_randomNumber_param0": "min",
  "dropletBlock_randomNumber_param0_description": "Връща най-малкото число",
  "dropletBlock_randomNumber_param1": "max",
  "dropletBlock_randomNumber_param1_description": "Връща най-голямото число",
  "dropletBlock_return_description": "Връща стойност от функция",
  "dropletBlock_return_signatureOverride": "връща",
  "dropletBlock_setAttribute_description": "Задава дадена стойност",
  "dropletBlock_subtractOperator_description": "Изваждане на две числа",
  "dropletBlock_subtractOperator_signatureOverride": "Оператор \"изваждане\"",
  "dropletBlock_whileBlock_description": "Създава цикъл, състоящ се от условен израз и блок на изпълнение за всяко взаимодействие в цикъла. Той ще продължава да се изпълнява, докато условието се промени на истина",
  "dropletBlock_whileBlock_signatureOverride": "\"докато\" цикъл",
  "emptyBlockInFunction": "Функцията {name} има незапълнен вход.",
  "emptyBlockInVariable": "Променливата {name} има незапълнен вход.",
  "emptyBlocksErrorMsg": "Блоковете \"Повтори\" и \"или\" трябва да съдържат други блокове в себе си, за да работят. Уверете се, че вътрешния блок се вписва правилно във външния блок.",
  "emptyExampleBlockErrorMsg": "Трябва Ви поне един пример за функция {functionName}. Проверете дали всеки пример има повикване и резултат.",
  "emptyFunctionBlocksErrorMsg": "Блокът за функция трябва да има други блокове вътре в себе си, за да работи.",
  "emptyFunctionalBlock": "Имате блок с незапълнено поле.",
  "emptyTopLevelBlock": "Няма блокове, които да се изпълняват. Трябва да прикачите блок към {topLevelBlockName} блок.",
  "end": "край",
  "errorEmptyFunctionBlockModal": "Трябва да има блокове вътре във вашата дефиниция на функция. Щракнете върху \"Редактиране\" и плъзнете блокове вътре в зеления блок.",
  "errorIncompleteBlockInFunction": "Щракнете върху \"Опитайте отново\", за да се уверите, че няма  липсващи блокове  вътре във вашата дефиниция на функция.",
  "errorParamInputUnattached": "Не забравяйте да прикачвате блок за въвеждане на параметри към блока на функцията във вашата работна област.",
  "errorQuestionMarksInNumberField": "Опитайте да замените \"???\" със стойност.",
  "errorRequiredParamsMissing": "Създайте параметър за вашата функция като щракнете върху \"Редактиране\" и добавите необходимите параметри. Плъзнете новите блокове за параметър в дефиницията на функцията Ви.",
  "errorUnusedFunction": "Създали сте функция, но  не сте я извадили във вашата работна област! Щракнете върху \"Функции\" в кутията с инструменти и  я използвайте във Вашата програма.",
  "errorUnusedParam": "Вие добавихте блок за параметър, но не го използвате в дефиницията. Не забравяйте да използвате вашия параметър като щракнете върху \"Редактиране\" и поставите блокът за параметър вътре в зеления блок.",
  "exampleErrorMessage": "Функцията {functionName} има един или повече примери, които се нуждаят от коригиране. Уверете се, че сте свързали вашата дефиниция отговора на въпроса.",
  "examplesFailedOnClose": "Един или повече от примерите Ви не отговарят на дефиницията. Проверете примерите преди да затворите прозореца",
  "extraTopBlocks": "Имате неприкрепени блокове.",
  "extraTopBlocksWhenRun": "Имате неприкрепени блокове. Искате ли да се приложат към \"при стартиране\" блока?",
  "finalStage": "Поздравления! Вие завършихте последния етап.",
  "finalStageTrophies": "Поздравления! Вие завършихте последния етап и спечелихте  {numTrophies, plural, one {a trophy} other {# trophies}}.",
  "finish": "Финал",
  "generatedCodeInfo": "Дори най-добрите университети учат блок базирано програмиране(напр., {berkeleyLink}, {harvardLink}). Но под капака, блоковете представляват кодове, написани на JavaScript, в света най-широко използваният за програмиране език:",
  "hashError": "За съжаление '%1' не съответства на нито една запазена програма.",
  "help": "Помощ",
  "hideToolbox": "(Скрий)",
  "hintHeader": "Ето един съвет:",
  "hintPrompt": "Нужда от помощ?",
  "hintRequest": "Вижте съвета",
  "hintReviewTitle": "Прегледайте вашите съвети",
  "hintSelectInstructions": "Инструкции и предишни съвети",
  "hintSelectNewHint": "Получете нов съвет",
  "hintTitle": "Подсказка:",
  "iconSearchPlaceholder": "Search for an icon...",
  "ignore": "Игнорирай",
  "infinity": "Инфинити",
  "jump": "скок",
  "keepPlaying": "Продължете да играете",
  "levelIncompleteError": "Използвате всички необходими видове блокове, но не по правилния начин.",
  "listVariable": "списък",
  "makeYourOwnFlappy": "Направете своя собствена Flappy Bird игра",
  "missingRecommendedBlocksErrorMsg": "Не е точно. Опитайте да използвате блок, който не сте включвали още.",
  "missingRequiredBlocksErrorMsg": "Не е точно. Вие трябва да използвате блок, който не сте включили в кода си още.",
  "nestedForSameVariable": "Вие използвате една и съща променлива вътре в два или повече вложени цикъла. Използвайте уникални имена за променливите, за да се избегнат безкрайни повторения.",
  "nextLevel": "Congratulations! You have completed this puzzle.",
  "nextLevelTrophies": "Поздравления! Завършихте пъзел {puzzleNumber} и спечелихте {numTrophies, plural, one {a trophy} other {# trophies}}.",
  "nextPuzzle": "Следващ пъзел",
  "nextStage": "Поздравления! Вие завършихте {stageName}.",
  "nextStageTrophies": "Поздравления! Завършихте етап {stageName} и спечелихте {numTrophies, plural, one {a trophy} other {# trophies}}.",
  "noIconsFound": "No icons found",
  "numBlocksNeeded": "This puzzle can be solved with %1 blocks.",
  "numLinesOfCodeWritten": "Вие написахте {numLines, plural, one {1line} other {# lines}} код!",
  "openWorkspace": "Как работи",
  "orientationLock": "Изключете заключването на ориентацията от опциите на устройството.",
  "pause": "Break",
  "play": "играй",
  "print": "Печат",
  "projectWarning": "Note: You are on a level that is part of a longer project. Changes made on this level will also appear in other levels in the project.",
  "puzzleTitle": "Пъзел {puzzle_number} от {stage_total}",
  "readonlyWorkspaceHeader": "Само за преглед: ",
  "recommendedBlockContextualHintTitle": "Опитайте да използвате блока по този начин за решаване на пъзела.",
  "repeat": "повтори",
  "resetProgram": "Начално състояние",
  "rotateText": "Завъртете устройството си.",
  "runProgram": "Старт",
  "runTooltip": "Стартира програмата, определена от блоковете в работното поле.",
  "runtimeErrorMsg": "Вашата програма не се изпълни успешно. Моля, премахнете ред {lineNumber} и опитайте отново.",
  "saveToGallery": "Запазване",
  "savedToGallery": "Запазено",
  "score": "точки",
  "sendToPhone": "Изпращане до телефон",
  "shareFailure": "За съжаление, не можем да споделим тази програма.",
  "shareWarningsAge": "Въведете вашата възраст по-долу и щракнете върху OK, за да продължите.",
  "shareWarningsMoreInfo": "Повече информация",
  "shareWarningsStoreData": "Тази версия на Студиото по кодиране съдържа данни, които могат да се видят от всеки с тази споделена връзка, така че бъдете внимателни, когато предоставяте лична информация.",
  "showBlock": "Get a block",
  "showBlocksHeader": "Покажи блоковете",
  "showCodeHeader": "Покажи кода",
  "showGeneratedCode": "Покажи кода",
  "showTextHeader": "Показване на текст",
  "showToolbox": "Показване на инструменти",
  "showVersionsHeader": "Хронология на версиите",
  "signup": "Регистрация във встъпителния курс",
  "stepIn": "Step in",
  "stepOver": "Step over",
  "stepOut": "Step out",
  "stringEquals": "низ =?",
  "submit": "Изпрати",
  "submitYourProject": "Изпратете вашия проект",
  "submitYourProjectConfirm": "Не можете да редактирате Вашия проект след подаване, да продължа ли?",
  "unsubmit": "Не е добавено",
  "unsubmitYourProject": "Не сте подали Вашия проект",
  "unsubmitYourProjectConfirm": "Не сте подали Вашия проект, това ще премахне датата за регистрация, наистина ли ще прекратите качването?",
  "subtitle": "визуална среда за програмиране",
  "syntaxErrorMsg": "Вашата програма съдържа правописна грешка. Моля, премахнете линия {lineNumber} и опитайте отново.",
  "textVariable": "текст",
  "toggleBlocksErrorMsg": "Трябва да се коригира грешка във вашата програма, преди тя да бъде показана като блокове.",
  "tooManyBlocksMsg": "Този пъзел може да бъде решен с <x id='START_SPAN'/><x id='END_SPAN'/> блокове.",
  "tooMuchWork": "Вие ме накарахте да свърша много работа! Може ли да повторите няколко пъти?",
  "toolboxHeader": "Блокове",
  "toolboxHeaderDroplet": "Кутия с инструменти",
  "totalNumLinesOfCodeWritten": "Общо: {numLines, plural, one {1 line} other {# lines}} код.",
  "tryAgain": "Опитайте отново",
  "tryBlocksBelowFeedback": "Опитайте да използвате един от блоковете по-долу:",
  "tryHOC": "Опитайте Часа на Кодирането",
  "unnamedFunction": "Имате променлива или функция, която няма име. Не забравяйте да дадете подробно описателно име.",
  "wantToLearn": "Искате ли да се научите да пишете код?",
  "watchVideo": "Гледайте видеото",
  "when": "когато",
  "whenRun": "при стартиране",
  "workspaceHeaderShort": "Работна област: ",
  "errorGenericLintError": "Your program contains an editor warning that needs to be corrected. Hover over the icons near the line numbers in the editor to learn more.",
  "yes": "Yes",
  "viewData": "View Data",
  "tryAgainText": "Keep working",
  "shareGame": "Share your app:",
  "shareApplabTwitter": "Check out the app I made. I wrote it myself with @codeorg",
  "reportAbuse": "Report Abuse",
  "repeatForeverTooltip": "Execute the actions in this block repeatedly while the app is running.",
  "repeatDo": "do",
  "repeatForever": "repeat forever",
  "reinfFeedbackMsg": "You're finished! Click \"Continue\" to move on to the next level.",
  "privacyPolicy": "Privacy Policy",
  "no": "No",
  "manageAssets": "Click to view or update your images and sounds.",
  "makeMyOwnApp": "Make my own app",
  "finalLevel": "Congratulations! You have solved the final puzzle.",
  "dropletBlock_write_param0_description": "The text or HTML you want appended to the bottom of your application",
  "dropletBlock_write_description": "Appends the specified text to the bottom of the document. The text can also be formatted as HTML.",
  "dropletBlock_updateRecord_param2_description": "A callback function that is asynchronously called when the call to updateRecord() is finished.",
  "dropletBlock_updateRecord_param1_description": "The record data.",
  "dropletBlock_updateRecord_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_updateRecord_description": "Using App Lab's table data storage, updates the provided record in the table with the specified name. The record must be uniquely identified with its id field. When the call is completed, the callback function is called.",
  "dropletBlock_turnTo_param0_description": "The new angle to set the turtle's direction to.",
  "dropletBlock_turnTo_description": "Changes the turtle's direction to a specific angle. 0 is up, 90 is right, 180 is down, and 270 is left.",
  "dropletBlock_turnRight_param0_description": "The angle to turn right.",
  "dropletBlock_turnRight_description": "Rotates the turtle right by the specified angle. The turtle’s position remains the same.",
  "dropletBlock_turnLeft_param0_description": "The angle to turn left.",
  "dropletBlock_turnLeft_description": "Rotates the turtle left by the specified angle. The turtle’s position remains the same.",
  "dropletBlock_toUpperCase_description": "Converts the original string to use all uppercase letters and returns it as a new string",
  "dropletBlock_toLowerCase_description": "Converts the original string to use all lowercase letters and returns it as a new string",
  "dropletBlock_textLabel_param1_description": "The value to display for the label.",
  "dropletBlock_textLabel_param0_description": "A unique identifier for the label control. The id is used for referencing the created label. For example, to assign event handlers.",
  "dropletBlock_textLabel_description": "Creates a text label on the screen displaying the text provided and referenced by the given id at default location (0,0).",
  "dropletBlock_textInput_param1_description": "The value to display for the input.",
  "dropletBlock_textInput_param0_description": "A unique identifier for the input control. The id is used for referencing the created input. For example, to assign event handlers.",
  "dropletBlock_textInput_description": "Create a text input and assign it an element id",
  "dropletBlock_substring_param1_description": "The position (up to, but not including) to stop the extraction.",
  "dropletBlock_substring_param1": "end",
  "dropletBlock_substring_param0_description": "The position to start the extraction.",
  "dropletBlock_substring_param0": "start",
  "dropletBlock_substring_description": "Returns a string extracted between the start and end positions of the original string",
  "dropletBlock_startWebRequest_param1_description": "A callback function to execute.",
  "dropletBlock_startWebRequest_param0_description": "The web address of a service that returns data.",
  "dropletBlock_startWebRequest_description": "Request data from the internet and execute code when the request is complete.",
  "dropletBlock_speed_param0_description": "The speed of the app's execution in the range of (1-100).",
  "dropletBlock_speed_description": "Sets the speed for the app's execution, which includes the turtle's speed.",
  "dropletBlock_show_description": "Makes the turtle visible at its current location.",
  "dropletBlock_showElement_param0_description": "The id of the element to show.",
  "dropletBlock_showElement_description": "Shows the element with the provided id.",
  "dropletBlock_setTimeout_param1_description": "The number of milliseconds to wait before executing the function.",
  "dropletBlock_setTimeout_param0_description": "A function to execute.",
  "dropletBlock_setTimeout_description": "Set a timer and execute code when that number of milliseconds has elapsed",
  "dropletBlock_setText_param1_description": "The text to display.",
  "dropletBlock_setText_param0_description": "The id of the specified element.",
  "dropletBlock_setText_description": "Set the text for the specified element",
  "dropletBlock_setStyle_description": "Add CSS style text to an element",
  "dropletBlock_setStrokeWidth_param0_description": "The width in pixels with which to draw lines, circles, and rectangles.",
  "dropletBlock_setStrokeWidth_description": "Set the line width for the active canvas.",
  "dropletBlock_setStrokeColor_param0_description": "The color name or hex value representing the color.",
  "dropletBlock_setStrokeColor_description": "Set the stroke color for the active canvas.",
  "dropletBlock_setProperty_param2_description": "The new property value.",
  "dropletBlock_setProperty_param1_description": "The property to change.",
  "dropletBlock_setProperty_param0_description": "The id of the specified element.",
  "dropletBlock_setProperty_description": "Sets a property to a new value for the specified element.",
  "dropletBlock_setSize_param2_description": "The height to set the element to, in pixels.",
  "dropletBlock_setSize_param1_description": "The width to set the element to, in pixels.",
  "dropletBlock_setSize_param0_description": "The id of the specified element.",
  "dropletBlock_setSize_description": "Sets the width and height for the specified element.",
  "dropletBlock_setScreen_param0_description": "The unique identifier for the screen. Must begin with a letter, contain no spaces, and may contain letters, digits, - and _.",
  "dropletBlock_setScreen_description": "Sets the screen to the given screenId.",
  "dropletBlock_setRed_param3_description": "The amount of red (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRed_param3": "redValue",
  "dropletBlock_setRed_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRed_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRed_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_setRed_description": "Sets the amount of red (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data to the redValue input amount.",
  "dropletBlock_setRGB_param6_description": "Optional. The amount of opacity (from 0 to 255) to set in the pixel. Defaults to 255 (full opacity).",
  "dropletBlock_setRGB_param6": "alpha",
  "dropletBlock_setRGB_param5_description": "The amount of blue (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param5": "blue",
  "dropletBlock_setRGB_param4_description": "The amount of green (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param4": "green",
  "dropletBlock_setRGB_param3_description": "The amount of red (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param3": "red",
  "dropletBlock_setRGB_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRGB_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRGB_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_setRGB_description": "Sets the RGB color values (ranging from 0 to 255) of the pixel located at the given x and y position in the given image data to the input red, green, blue amounts.",
  "dropletBlock_setPosition_param4_description": "Optional. The height to set the element to, in pixels.",
  "dropletBlock_setPosition_param3_description": "Optional. The width to set the element to, in pixels.",
  "dropletBlock_setPosition_param2_description": "The y coordinate on the screen to move the element to.",
  "dropletBlock_setPosition_param1_description": "The x coordinate on the screen to move the element to.",
  "dropletBlock_setPosition_param0_description": "The id of the specified element.",
  "dropletBlock_setPosition_description": "Positions the specified element at an x,y screen coordinate, and optionally sets a new width and height for the element.",
  "dropletBlock_setParent_description": "Set an element to become a child of a parent element",
  "dropletBlock_setNumber_param1_description": "The number value to display.",
  "dropletBlock_setNumber_param0_description": "The id of the specified element.",
  "dropletBlock_setNumber_description": "Set the number value for the specified element",
  "dropletBlock_setKeyValueSync_param1_description": "The data to be stored.",
  "dropletBlock_setKeyValueSync_param1": "value",
  "dropletBlock_setKeyValueSync_param0_description": "The name of the key to be stored.",
  "dropletBlock_setKeyValueSync_param0": "key",
  "dropletBlock_setKeyValueSync_description": "Stores a key/value pair in App Lab's key/value data storage.",
  "dropletBlock_setKeyValue_param2_description": "A callback function that is asynchronously called when the call to setKeyValue is finished.",
  "dropletBlock_setKeyValue_param1_description": "The data to be stored.",
  "dropletBlock_setKeyValue_param0_description": "The name of the key to be stored.",
  "dropletBlock_setKeyValue_description": "Stores a key/value pair in App Lab's key/value data storage, and calls the callback function when the action is finished.",
  "dropletBlock_setInterval_param1_description": "The number of milliseconds between each execution of the function.",
  "dropletBlock_setInterval_param0_description": "A function to execute.",
  "dropletBlock_setInterval_description": "Execute the callback function code every time a certain number of milliseconds has elapsed, until canceled.",
  "dropletBlock_setImageURL_param1_description": "TThe source URL of the image to be displayed on screen.",
  "dropletBlock_setImageURL_param0_description": "The id of the image element.",
  "dropletBlock_setImageURL_description": "Sets the URL for the provided image element id.",
  "dropletBlock_setGreen_param3_description": "The amount of green (from 0 to 255) to set in the pixel.",
  "dropletBlock_setGreen_param3": "greenValue",
  "dropletBlock_setGreen_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setGreen_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setGreen_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_setGreen_description": "Sets the amount of green (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data to the greenValue input amount.",
  "dropletBlock_setFillColor_param0_description": "The color name or hex value representing the color.",
  "dropletBlock_setFillColor_description": "Set the fill color for the active canvas.",
  "dropletBlock_setChecked_param1": "checked",
  "dropletBlock_setChecked_param0": "id",
  "dropletBlock_setChecked_description": "Set the state of a checkbox or radio button",
  "dropletBlock_setBlue_param3_description": "The amount of blue (from 0 to 255) to set in the pixel.",
  "dropletBlock_setBlue_param3": "blueValue",
  "dropletBlock_setBlue_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setBlue_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setBlue_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_setBlue_description": "Sets the amount of blue (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data to the blueValue input amount.",
  "dropletBlock_setAlpha_param3_description": "The amount of alpha (opacity) (from 0 to 255) to set in the pixel.",
  "dropletBlock_setAlpha_param3": "alphaValue",
  "dropletBlock_setAlpha_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setAlpha_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setAlpha_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_setAlpha_description": "Sets the amount of alpha (opacity) (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data.",
  "dropletBlock_setActiveCanvas_param0_description": "The id of the canvas element to activate.",
  "dropletBlock_setActiveCanvas_description": "Change the active canvas to the canvas with the specified id (other canvas commands only affect the active canvas).",
  "dropletBlock_removeItem_param1_description": "The position of the item to remove from the array.",
  "dropletBlock_removeItem_param0_description": "The array to be modified.",
  "dropletBlock_removeItem_description": "Remove the item at the specified position from the array.",
  "dropletBlock_rect_param3_description": "The vertical height in pixels of the rectangle.",
  "dropletBlock_rect_param2_description": "The horizontal width in pixels of the rectangle.",
  "dropletBlock_rect_param1_description": "The y position in pixels of the upper left corner of the rectangle.",
  "dropletBlock_rect_param0_description": "The x position in pixels of the upper left corner of the rectangle.",
  "dropletBlock_rect_description": "Draws a rectangle onto the active canvas positioned at upperLeftX and upperLeftY, and size width and height.",
  "dropletBlock_readRecords_param2_description": "A callback function that is asynchronously called when the call to readRecords() is finished.",
  "dropletBlock_readRecords_param1_description": "The search terms.",
  "dropletBlock_readRecords_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_readRecords_description": "Using App Lab's table data storage, reads the records from the provided table name that match the specified search terms. When the call is completed, the callback function is called and is passed the array of records.",
  "dropletBlock_radioButton_param2_description": "The group that the radio button is associated with. Only one button in a group can be checked at a time.",
  "dropletBlock_radioButton_param2": "group",
  "dropletBlock_radioButton_param1_description": "Whether the radio button is initially checked.",
  "dropletBlock_radioButton_param0_description": "A unique identifier for the radio button. The id is used for referencing the radio button control. For example, to assign event handlers.",
  "dropletBlock_radioButton_description": "Creates a radio button and assigns it to a group for choosing from a predefined set of options. Only one radio button in a group can be selected at a time",
  "dropletBlock_putImageData_param2_description": "The y position in pixels starting from the upper left corner of image to place the data on the canvas.",
  "dropletBlock_putImageData_param1_description": "The x position in pixels starting from the upper left corner of image to place the data on the canvas.",
  "dropletBlock_putImageData_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_putImageData_description": "Puts the input image data onto the current canvas element starting at position x, y.",
  "dropletBlock_playSound_param0_description": "The URL to a sound file. Can be an project asset name or external URL.",
  "dropletBlock_playSound_description": "Plays the MP3 sound file from the specified URL.",
  "dropletBlock_penWidth_param0_description": "The diameter of the circles drawn behind the turtle as it moves.",
  "dropletBlock_penWidth_description": "Sets the width of the line in pixels that the turtle draws behind it as it moves.",
  "dropletBlock_penUp_description": "Picks the pen up so the turtle does not draw a line as it moves.",
  "dropletBlock_penRGB_param3_description": "Optional. The opacity, a number between 0.0 (fully transparent) and 1.0 (fully opaque), of the color used by the turtle for drawing lines and dots. Default is 1.0.",
  "dropletBlock_penRGB_param3": "a",
  "dropletBlock_penRGB_param2_description": "The amount of blue (0-255) in the pen used by the turtle for drawing lines and dots.",
  "dropletBlock_penRGB_param1_description": "The amount of green (0-255) in the pen used by the turtle for drawing lines and dots.",
  "dropletBlock_penRGB_param0_description": "The amount of red (0-255) in the pen used by the turtle for drawing lines and dots.",
  "dropletBlock_penRGB_description": "Using RGBA values, sets the color of the pen used by the turtle for drawing lines and dots.",
  "dropletBlock_penDown_description": "Puts the pen down so the turtle draws a line behind it as it moves.",
  "dropletBlock_penColor_param0_description": "The color of the line left behind the turtle as it moves.",
  "dropletBlock_penColor_description": "Sets the color of the pen used by the turtle for drawing lines and dots.",
  "dropletBlock_onEvent_param2_description": "A function to execute.",
  "dropletBlock_onEvent_param1_description": "The type of event to respond to.",
  "dropletBlock_onEvent_param0_description": "The ID of the UI control to which this function applies.",
  "dropletBlock_onEvent_description": "Executes the callback code when a specific event type occurs for the specified UI element id.",
  "dropletBlock_move_param1_description": "The number of pixels to move the turtle down.",
  "dropletBlock_move_param0_description": "The number of pixels to move the turtle right.",
  "dropletBlock_move_description": "Moves the turtle by adding x pixels to the turtle's current x position and y pixels to the turtle's current y position.",
  "dropletBlock_moveTo_param1_description": "The y coordinate on the screen to move the turtle.",
  "dropletBlock_moveTo_param0_description": "The x coordinate on the screen to move the turtle.",
  "dropletBlock_moveTo_description": "Moves the turtle to a specific (x,y) position on the screen.",
  "dropletBlock_moveForward_param0_description": "The number of pixels to move the turtle forward in its current direction. If not provided, the turtle will move forward 25 pixels.",
  "dropletBlock_moveForward_description": "Moves the turtle forward a given number of pixels in the current direction.",
  "dropletBlock_moveBackward_param0_description": "The number of pixels to move the turtle back in its current direction. If not provided, the turtle will move back 25 pixels.",
  "dropletBlock_moveBackward_description": "Moves the turtle backward a given number of pixels from the current direction.",
  "dropletBlock_listLength_signatureOverride": "[list].length",
  "dropletBlock_listLength_description": "The length of the array",
  "dropletBlock_line_param3_description": "The y position in pixels of the end of the line.",
  "dropletBlock_line_param2_description": "The x position in pixels of the end of the line.",
  "dropletBlock_line_param1_description": "The y position in pixels of the beginning of the line.",
  "dropletBlock_line_param0_description": "The x position in pixels of the beginning of the line.",
  "dropletBlock_line_description": "Draws a line on the active canvas from x1, y1 to x2, y2.",
  "dropletBlock_length_description": "The length of the string",
  "dropletBlock_insertItem_param2_description": "The item to insert into the array.",
  "dropletBlock_insertItem_param1_description": "The position to insert the item into the array.",
  "dropletBlock_insertItem_param0_description": "The array to be modified.",
  "dropletBlock_insertItem_description": "Insert the item into the array at the specified position.",
  "dropletBlock_innerHTML_description": "Set the inner HTML for the element with the specified id",
  "dropletBlock_indexOf_param0_description": "The string to search for.",
  "dropletBlock_indexOf_param0": "searchValue",
  "dropletBlock_indexOf_description": "Returns the position of the first occurrence of searchValue within the string",
  "dropletBlock_includes_param0_description": "The string to search for.",
  "dropletBlock_includes_param0": "searchValue",
  "dropletBlock_includes_description": "Returns true if searchValue is found within the string",
  "dropletBlock_image_param1_description": "The source URL of the image to be displayed on screen.",
  "dropletBlock_image_param0_description": "The id of the image element.",
  "dropletBlock_image_description": "Displays the image from the provided url on the screen.",
  "dropletBlock_imageUploadButton_description": "Create an image upload button and assign it an element id",
  "dropletBlock_hide_description": "Makes the turtle invisible at its current location.",
  "dropletBlock_hideElement_param0_description": "The id of the element to hide.",
  "dropletBlock_hideElement_description": "Hides the element with the provided id so it is not shown on the screen.",
  "dropletBlock_getY_description": "Gets the current y coordinate in pixels of the turtle.",
  "dropletBlock_getYPosition_param0_description": "The id of the specified element.",
  "dropletBlock_getYPosition_description": "Get the y position of the specified element.",
  "dropletBlock_getX_description": "Gets the current x coordinate in pixels of the turtle.",
  "dropletBlock_getXPosition_param0_description": "The id of the specified element.",
  "dropletBlock_getXPosition_description": "Get the x position of the specified element.",
  "dropletBlock_getUserId_description": "Gets a unique identifier for the current user of this app.",
  "dropletBlock_getText_param0_description": "The id of the specified element.",
  "dropletBlock_getText_description": "Get the text from the specified element",
  "dropletBlock_getRed_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getRed_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getRed_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_getRed_description": "Gets the amount of red (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data.",
  "dropletBlock_getNumber_param0_description": "The id of the specified element.",
  "dropletBlock_getNumber_description": "Get the number value from the specified element",
  "dropletBlock_getKeyValueSync_param0_description": "The name of the key to be retrieved.",
  "dropletBlock_getKeyValueSync_param0": "key",
  "dropletBlock_getKeyValueSync_description": "Retrieves the value stored at the provided key name in App Lab's key/value data storage.",
  "dropletBlock_getKeyValue_param1_description": "A callback function that is asynchronously called when the call to getKeyValue is finished.",
  "dropletBlock_getKeyValue_param0_description": "The name of the key to be retrieved.",
  "dropletBlock_getKeyValue_description": "Retrieves the value stored at the provided key name in App Lab's key/value data storage. The value is returned as a parameter to callback function when the retrieval is finished.",
  "dropletBlock_getImageURL_param0_description": "The id of the image element.",
  "dropletBlock_getImageURL_description": "Get the URL for the provided image element id",
  "dropletBlock_getImageData_param3_description": "The height of the bounding rectangle to capture the image data.",
  "dropletBlock_getImageData_param2_description": "The width of the bounding rectangle to capture the image data.",
  "dropletBlock_getImageData_param1_description": "The y position in pixels to start the capture.",
  "dropletBlock_getImageData_param0_description": "The x position in pixels to start the capture.",
  "dropletBlock_getImageData_description": "Returns an object representing the image data captured from the canvas with the rectangle specified by x, y, width, and height.",
  "dropletBlock_getGreen_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getGreen_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getGreen_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_getGreen_description": "Gets the amount of green (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data.",
  "dropletBlock_getDirection_description": "Returns the current direction that the turtle is facing. 0 degrees is pointing up.",
  "dropletBlock_getChecked_param0_description": "The id of the specified element.",
  "dropletBlock_getChecked_description": "Get the state of a checkbox or radio button",
  "dropletBlock_getBlue_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getBlue_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getBlue_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_getBlue_description": "Gets the amount of blue (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data.",
  "dropletBlock_getAttribute_description": "Gets the given attribute",
  "dropletBlock_getAlpha_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getAlpha_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getAlpha_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()]).",
  "dropletBlock_getAlpha_description": "Returns the amount of alpha (opacity) (ranging from 0 to 255) in the color of the pixel located at the given x and y position in the given image data.",
  "dropletBlock_dropdown_signatureOverride": "dropdown(id, option1, option2, ..., optionX)",
  "dropletBlock_dropdown_description": "Create a dropdown, assign it an element id, and populate it with a list of items",
  "dropletBlock_drawImageURL_param0_description": "The URL to an image. Can be an project asset name or external URL.",
  "dropletBlock_drawImageURL_description": "Draws the image at the specific URL onto the active canvas element.",
  "dropletBlock_drawImage_param4": "height",
  "dropletBlock_drawImage_param3": "width",
  "dropletBlock_drawImage_param2_description": "The y position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param2": "y",
  "dropletBlock_drawImage_param1_description": "The x position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param1": "x",
  "dropletBlock_drawImage_param0_description": "The x position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param0": "id",
  "dropletBlock_drawImage_description": "Draws the specified image or canvas element onto the active canvas at the specified position, and optionally scales the element to the specified width and height",
  "dropletBlock_drawChartFromRecords_param5_description": "Optional. The callback function that is asynchronously called when the call to drawChartFromRecords() is finished.",
  "dropletBlock_drawChartFromRecords_param5": "callback",
  "dropletBlock_drawChartFromRecords_param4_description": "Optional. Display options for the chart.",
  "dropletBlock_drawChartFromRecords_param4": "options",
  "dropletBlock_drawChartFromRecords_param3_description": "An array of column names.",
  "dropletBlock_drawChartFromRecords_param2_description": "The name of the table to retrieve records from.",
  "dropletBlock_drawChartFromRecords_param1_description": "The chart type ('bar', 'line', 'pie', or 'scatter').",
  "dropletBlock_drawChartFromRecords_param0_description": "The chart id.",
  "dropletBlock_drawChartFromRecords_description": "Draws a chart to the specified chart element using data retrieved from the specified table.",
  "dropletBlock_drawChart_param4_description": "Optional. The callback function that is asynchronously called when the call to drawChart() is finished.",
  "dropletBlock_drawChart_param4": "callback",
  "dropletBlock_drawChart_param3_description": "Optional. Display options for the chart.",
  "dropletBlock_drawChart_param3": "options",
  "dropletBlock_drawChart_param2_description": "The chart data.",
  "dropletBlock_drawChart_param1_description": "The chart type ('bar', 'line', 'pie', or 'scatter').",
  "dropletBlock_drawChart_param0_description": "The chart id.",
  "dropletBlock_drawChart_description": "Draws a chart to the specified chart element using the data provided.",
  "dropletBlock_dot_param0_description": "The radius of the dot to draw.",
  "dropletBlock_dot_description": "Draws a dot centered at the turtle's location with the specified radius.",
  "dropletBlock_deleteRecord_param2_description": "A callback function that is asynchronously called when the call to deleteRecord() is finished.",
  "dropletBlock_deleteRecord_param1_description": "The record data.",
  "dropletBlock_deleteRecord_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_deleteRecord_description": "Using App Lab's table data storage, deletes the provided record in the table with the specified name. The record is an object that must be uniquely identified with its id field. When the call is completed, the callback function is called.",
  "dropletBlock_deleteElement_param0_description": "The id of the element to delete.",
  "dropletBlock_deleteElement_description": "Delete the element with the specified id.",
  "dropletBlock_declareAssign_str_hello_world_signatureOverride": "Declare and assign a string to a variable",
  "dropletBlock_declareAssign_str_hello_world_description": "Declare a variable and assign a string to it",
  "dropletBlock_declareAssign_list_abd_signatureOverride": "Declare and assign an array to a variable",
  "dropletBlock_declareAssign_list_abd_description": "Declare a variable and assigns an array to it with the given initial values",
  "dropletBlock_createRecord_param2_description": "A callback function that is asynchronously called when the call to createRecord() is finished.",
  "dropletBlock_createRecord_param1_description": "The record data.",
  "dropletBlock_createRecord_param0_description": "The name of the table the record should be added to. A table with the specified name gets created if it doesn't exist.",
  "dropletBlock_createRecord_description": "Using App Lab's table data storage, creates a record with a unique id in the table name provided, and calls the callback function when the action is finished.",
  "dropletBlock_createCanvas_param2_description": "The vertical height in pixels of the rectangle.",
  "dropletBlock_createCanvas_param1_description": "The horizontal width in pixels of the rectangle.",
  "dropletBlock_createCanvas_param0_description": "The id of the new canvas element.",
  "dropletBlock_createCanvas_description": "Create a canvas with the specified id, and optionally set width and height dimensions.",
  "dropletBlock_container_description": "Create a division container with the specified element id, and optionally set its inner HTML",
  "dropletBlock_console.log_param0_description": "The message string to display in the console.",
  "dropletBlock_console.log_param0": "message",
  "dropletBlock_console.log_description": "Displays the string or variable in the console display",
  "dropletBlock_clearTimeout_param0_description": "The value returned by the setTimeout function to cancel.",
  "dropletBlock_clearTimeout_param0": "timeout",
  "dropletBlock_clearTimeout_description": "Clear an existing timer by passing in the value returned from setTimeout()",
  "dropletBlock_clearInterval_param0_description": "The value returned by the setInterval function to clear.",
  "dropletBlock_clearInterval_param0": "interval",
  "dropletBlock_clearInterval_description": "Clear an existing interval timer by passing in the value returned from setInterval()",
  "dropletBlock_clearCanvas_description": "Clear all data on the active canvas",
  "dropletBlock_circle_param2_description": "The radius of the circle, in pixels.",
  "dropletBlock_circle_param1_description": "The y position in pixels of the center of the circle.",
  "dropletBlock_circle_param0_description": "The x position in pixels of the center of the circle.",
  "dropletBlock_circle_description": "Draw a circle on the active  canvas with the specified coordinates for center (x, y) and radius.",
  "dropletBlock_checkbox_param1_description": "The initial value of the checkbox.",
  "dropletBlock_checkbox_param0_description": "A unique identifier for the checkbox. The id is used for referencing the created checkbox. For example, to assign event handlers.",
  "dropletBlock_checkbox_description": "Create a checkbox and assign it an element id",
  "dropletBlock_button_param1_description": "The text displayed within the button.",
  "dropletBlock_button_param0_description": "A unique identifier for the button. The id is used for referencing the created button. For example, to assign event handlers.",
  "dropletBlock_button_description": "Creates a button on the screen displaying the text provided and referenced by the given id at default location (0,0).",
  "dropletBlock_arcRight_param1_description": "The radius of the circle that is placed right of the turtle. Must be >= 0.",
  "dropletBlock_arcRight_param0_description": "The angle along the circle to move.",
  "dropletBlock_arcRight_description": "Moves the turtle forward and to the right in a smooth, circular arc.",
  "dropletBlock_arcLeft_param1_description": "The radius of the circle that is placed left of the turtle. Must be >= 0.",
  "dropletBlock_arcLeft_param0_description": "The angle along the circle to move.",
  "dropletBlock_arcLeft_description": "Moves the turtle forward and to the left in a smooth, circular arc.",
  "dropletBlock_appendItem_param1_description": "The item to add to the end of the array.",
  "dropletBlock_appendItem_param0_description": "The array to be modified.",
  "dropletBlock_appendItem_description": "Append the item to the end of the array.",
  "designWorkspaceHeader": "Workspace",
  "designWorkspaceDescription": "Click on an element or choose it from the dropdown below to edit its properties. Create code in Events.",
  "designToolboxHeader": "Design Toolbox",
  "designToolboxDescription": "Drag the elements into your app!",
  "dataLimitAlert": "The app has been reading or writing to the database too frequently, which may result in unexpected failures.  Please let the app owner know if you keep experiencing issues.",
  "copyright": "Copyright",
  "containerTooltip": "Creates a division container and sets its inner HTML.",
  "container": "create container",
  "catEvents": "Events",
  "catControl": "Loops",
  "builtOnCodeStudio": "Built on Code Studio",
  "addEventHeader": "Click a link below to add a function to your code that will be called when the event is triggered."
}